<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1338" onload="init(evt)" viewBox="0 0 1200 1338" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1338" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">py-spy record -o profile.svg -- python train.py</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1327.00"> </text><svg id="frames" x="10" width="1180" total_samples="18778"><g><title>__init__ (utils.py:29) (19 samples, 0.10%)</title><rect x="0.1598%" y="100" width="0.1012%" height="15" fill="rgb(227,0,7)" fg:x="30" fg:w="19"/><text x="0.4098%" y="110.50"></text></g><g><title>__init__ (utils.py:32) (36 samples, 0.19%)</title><rect x="0.2716%" y="100" width="0.1917%" height="15" fill="rgb(217,0,24)" fg:x="51" fg:w="36"/><text x="0.5216%" y="110.50"></text></g><g><title>&lt;module&gt; (train.py:26) (94 samples, 0.50%)</title><rect x="0.0266%" y="68" width="0.5006%" height="15" fill="rgb(221,193,54)" fg:x="5" fg:w="94"/><text x="0.2766%" y="78.50"></text></g><g><title>__init__ (env.py:18) (94 samples, 0.50%)</title><rect x="0.0266%" y="84" width="0.5006%" height="15" fill="rgb(248,212,6)" fg:x="5" fg:w="94"/><text x="0.2766%" y="94.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:2604) (20 samples, 0.11%)</title><rect x="0.7083%" y="452" width="0.1065%" height="15" fill="rgb(208,68,35)" fg:x="133" fg:w="20"/><text x="0.9583%" y="462.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (20 samples, 0.11%)</title><rect x="0.7083%" y="468" width="0.1065%" height="15" fill="rgb(232,128,0)" fg:x="133" fg:w="20"/><text x="0.9583%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (20 samples, 0.11%)</title><rect x="0.7083%" y="484" width="0.1065%" height="15" fill="rgb(207,160,47)" fg:x="133" fg:w="20"/><text x="0.9583%" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (20 samples, 0.11%)</title><rect x="0.7083%" y="500" width="0.1065%" height="15" fill="rgb(228,23,34)" fg:x="133" fg:w="20"/><text x="0.9583%" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (20 samples, 0.11%)</title><rect x="0.7083%" y="516" width="0.1065%" height="15" fill="rgb(218,30,26)" fg:x="133" fg:w="20"/><text x="0.9583%" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (20 samples, 0.11%)</title><rect x="0.7083%" y="532" width="0.1065%" height="15" fill="rgb(220,122,19)" fg:x="133" fg:w="20"/><text x="0.9583%" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (20 samples, 0.11%)</title><rect x="0.7083%" y="548" width="0.1065%" height="15" fill="rgb(250,228,42)" fg:x="133" fg:w="20"/><text x="0.9583%" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (20 samples, 0.11%)</title><rect x="0.7083%" y="564" width="0.1065%" height="15" fill="rgb(240,193,28)" fg:x="133" fg:w="20"/><text x="0.9583%" y="574.50"></text></g><g><title>&lt;module&gt; (stable_baselines3/a2c/a2c.py:3) (113 samples, 0.60%)</title><rect x="0.5272%" y="356" width="0.6018%" height="15" fill="rgb(216,20,37)" fg:x="99" fg:w="113"/><text x="0.7772%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (113 samples, 0.60%)</title><rect x="0.5272%" y="372" width="0.6018%" height="15" fill="rgb(206,188,39)" fg:x="99" fg:w="113"/><text x="0.7772%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (113 samples, 0.60%)</title><rect x="0.5272%" y="388" width="0.6018%" height="15" fill="rgb(217,207,13)" fg:x="99" fg:w="113"/><text x="0.7772%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (113 samples, 0.60%)</title><rect x="0.5272%" y="404" width="0.6018%" height="15" fill="rgb(231,73,38)" fg:x="99" fg:w="113"/><text x="0.7772%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (113 samples, 0.60%)</title><rect x="0.5272%" y="420" width="0.6018%" height="15" fill="rgb(225,20,46)" fg:x="99" fg:w="113"/><text x="0.7772%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (113 samples, 0.60%)</title><rect x="0.5272%" y="436" width="0.6018%" height="15" fill="rgb(210,31,41)" fg:x="99" fg:w="113"/><text x="0.7772%" y="446.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:405) (57 samples, 0.30%)</title><rect x="0.8254%" y="452" width="0.3035%" height="15" fill="rgb(221,200,47)" fg:x="155" fg:w="57"/><text x="1.0754%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (57 samples, 0.30%)</title><rect x="0.8254%" y="468" width="0.3035%" height="15" fill="rgb(226,26,5)" fg:x="155" fg:w="57"/><text x="1.0754%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (57 samples, 0.30%)</title><rect x="0.8254%" y="484" width="0.3035%" height="15" fill="rgb(249,33,26)" fg:x="155" fg:w="57"/><text x="1.0754%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:921) (57 samples, 0.30%)</title><rect x="0.8254%" y="500" width="0.3035%" height="15" fill="rgb(235,183,28)" fg:x="155" fg:w="57"/><text x="1.0754%" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:813) (57 samples, 0.30%)</title><rect x="0.8254%" y="516" width="0.3035%" height="15" fill="rgb(221,5,38)" fg:x="155" fg:w="57"/><text x="1.0754%" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1321) (57 samples, 0.30%)</title><rect x="0.8254%" y="532" width="0.3035%" height="15" fill="rgb(247,18,42)" fg:x="155" fg:w="57"/><text x="1.0754%" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (57 samples, 0.30%)</title><rect x="0.8254%" y="548" width="0.3035%" height="15" fill="rgb(241,131,45)" fg:x="155" fg:w="57"/><text x="1.0754%" y="558.50"></text></g><g><title>&lt;module&gt; (stable_baselines3/common/logger.py:12) (21 samples, 0.11%)</title><rect x="1.1556%" y="644" width="0.1118%" height="15" fill="rgb(249,31,29)" fg:x="217" fg:w="21"/><text x="1.4056%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (21 samples, 0.11%)</title><rect x="1.1556%" y="660" width="0.1118%" height="15" fill="rgb(225,111,53)" fg:x="217" fg:w="21"/><text x="1.4056%" y="670.50"></text></g><g><title>&lt;module&gt; (stable_baselines3/a2c/a2c.py:7) (42 samples, 0.22%)</title><rect x="1.1290%" y="356" width="0.2237%" height="15" fill="rgb(238,160,17)" fg:x="212" fg:w="42"/><text x="1.3790%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (42 samples, 0.22%)</title><rect x="1.1290%" y="372" width="0.2237%" height="15" fill="rgb(214,148,48)" fg:x="212" fg:w="42"/><text x="1.3790%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (42 samples, 0.22%)</title><rect x="1.1290%" y="388" width="0.2237%" height="15" fill="rgb(232,36,49)" fg:x="212" fg:w="42"/><text x="1.3790%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (42 samples, 0.22%)</title><rect x="1.1290%" y="404" width="0.2237%" height="15" fill="rgb(209,103,24)" fg:x="212" fg:w="42"/><text x="1.3790%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (42 samples, 0.22%)</title><rect x="1.1290%" y="420" width="0.2237%" height="15" fill="rgb(229,88,8)" fg:x="212" fg:w="42"/><text x="1.3790%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (42 samples, 0.22%)</title><rect x="1.1290%" y="436" width="0.2237%" height="15" fill="rgb(213,181,19)" fg:x="212" fg:w="42"/><text x="1.3790%" y="446.50"></text></g><g><title>&lt;module&gt; (stable_baselines3/common/buffers.py:17) (42 samples, 0.22%)</title><rect x="1.1290%" y="452" width="0.2237%" height="15" fill="rgb(254,191,54)" fg:x="212" fg:w="42"/><text x="1.3790%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (42 samples, 0.22%)</title><rect x="1.1290%" y="468" width="0.2237%" height="15" fill="rgb(241,83,37)" fg:x="212" fg:w="42"/><text x="1.3790%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (42 samples, 0.22%)</title><rect x="1.1290%" y="484" width="0.2237%" height="15" fill="rgb(233,36,39)" fg:x="212" fg:w="42"/><text x="1.3790%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (42 samples, 0.22%)</title><rect x="1.1290%" y="500" width="0.2237%" height="15" fill="rgb(226,3,54)" fg:x="212" fg:w="42"/><text x="1.3790%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (42 samples, 0.22%)</title><rect x="1.1290%" y="516" width="0.2237%" height="15" fill="rgb(245,192,40)" fg:x="212" fg:w="42"/><text x="1.3790%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (42 samples, 0.22%)</title><rect x="1.1290%" y="532" width="0.2237%" height="15" fill="rgb(238,167,29)" fg:x="212" fg:w="42"/><text x="1.3790%" y="542.50"></text></g><g><title>&lt;module&gt; (stable_baselines3/common/utils.py:25) (38 samples, 0.20%)</title><rect x="1.1503%" y="548" width="0.2024%" height="15" fill="rgb(232,182,51)" fg:x="216" fg:w="38"/><text x="1.4003%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (38 samples, 0.20%)</title><rect x="1.1503%" y="564" width="0.2024%" height="15" fill="rgb(231,60,39)" fg:x="216" fg:w="38"/><text x="1.4003%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (38 samples, 0.20%)</title><rect x="1.1503%" y="580" width="0.2024%" height="15" fill="rgb(208,69,12)" fg:x="216" fg:w="38"/><text x="1.4003%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (38 samples, 0.20%)</title><rect x="1.1503%" y="596" width="0.2024%" height="15" fill="rgb(235,93,37)" fg:x="216" fg:w="38"/><text x="1.4003%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (37 samples, 0.20%)</title><rect x="1.1556%" y="612" width="0.1970%" height="15" fill="rgb(213,116,39)" fg:x="217" fg:w="37"/><text x="1.4056%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (37 samples, 0.20%)</title><rect x="1.1556%" y="628" width="0.1970%" height="15" fill="rgb(222,207,29)" fg:x="217" fg:w="37"/><text x="1.4056%" y="638.50"></text></g><g><title>&lt;module&gt; (train.py:3) (167 samples, 0.89%)</title><rect x="0.5272%" y="68" width="0.8893%" height="15" fill="rgb(206,96,30)" fg:x="99" fg:w="167"/><text x="0.7772%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (167 samples, 0.89%)</title><rect x="0.5272%" y="84" width="0.8893%" height="15" fill="rgb(218,138,4)" fg:x="99" fg:w="167"/><text x="0.7772%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (167 samples, 0.89%)</title><rect x="0.5272%" y="100" width="0.8893%" height="15" fill="rgb(250,191,14)" fg:x="99" fg:w="167"/><text x="0.7772%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (167 samples, 0.89%)</title><rect x="0.5272%" y="116" width="0.8893%" height="15" fill="rgb(239,60,40)" fg:x="99" fg:w="167"/><text x="0.7772%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (167 samples, 0.89%)</title><rect x="0.5272%" y="132" width="0.8893%" height="15" fill="rgb(206,27,48)" fg:x="99" fg:w="167"/><text x="0.7772%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (167 samples, 0.89%)</title><rect x="0.5272%" y="148" width="0.8893%" height="15" fill="rgb(225,35,8)" fg:x="99" fg:w="167"/><text x="0.7772%" y="158.50"></text></g><g><title>&lt;module&gt; (stable_baselines3/__init__.py:3) (167 samples, 0.89%)</title><rect x="0.5272%" y="164" width="0.8893%" height="15" fill="rgb(250,213,24)" fg:x="99" fg:w="167"/><text x="0.7772%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (167 samples, 0.89%)</title><rect x="0.5272%" y="180" width="0.8893%" height="15" fill="rgb(247,123,22)" fg:x="99" fg:w="167"/><text x="0.7772%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (167 samples, 0.89%)</title><rect x="0.5272%" y="196" width="0.8893%" height="15" fill="rgb(231,138,38)" fg:x="99" fg:w="167"/><text x="0.7772%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (167 samples, 0.89%)</title><rect x="0.5272%" y="212" width="0.8893%" height="15" fill="rgb(231,145,46)" fg:x="99" fg:w="167"/><text x="0.7772%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (167 samples, 0.89%)</title><rect x="0.5272%" y="228" width="0.8893%" height="15" fill="rgb(251,118,11)" fg:x="99" fg:w="167"/><text x="0.7772%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (167 samples, 0.89%)</title><rect x="0.5272%" y="244" width="0.8893%" height="15" fill="rgb(217,147,25)" fg:x="99" fg:w="167"/><text x="0.7772%" y="254.50"></text></g><g><title>&lt;module&gt; (stable_baselines3/a2c/__init__.py:1) (167 samples, 0.89%)</title><rect x="0.5272%" y="260" width="0.8893%" height="15" fill="rgb(247,81,37)" fg:x="99" fg:w="167"/><text x="0.7772%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (167 samples, 0.89%)</title><rect x="0.5272%" y="276" width="0.8893%" height="15" fill="rgb(209,12,38)" fg:x="99" fg:w="167"/><text x="0.7772%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (167 samples, 0.89%)</title><rect x="0.5272%" y="292" width="0.8893%" height="15" fill="rgb(227,1,9)" fg:x="99" fg:w="167"/><text x="0.7772%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (167 samples, 0.89%)</title><rect x="0.5272%" y="308" width="0.8893%" height="15" fill="rgb(248,47,43)" fg:x="99" fg:w="167"/><text x="0.7772%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (167 samples, 0.89%)</title><rect x="0.5272%" y="324" width="0.8893%" height="15" fill="rgb(221,10,30)" fg:x="99" fg:w="167"/><text x="0.7772%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (167 samples, 0.89%)</title><rect x="0.5272%" y="340" width="0.8893%" height="15" fill="rgb(210,229,1)" fg:x="99" fg:w="167"/><text x="0.7772%" y="350.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/symbolic_convert.py:27) (48 samples, 0.26%)</title><rect x="1.4964%" y="516" width="0.2556%" height="15" fill="rgb(222,148,37)" fg:x="281" fg:w="48"/><text x="1.7464%" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (48 samples, 0.26%)</title><rect x="1.4964%" y="532" width="0.2556%" height="15" fill="rgb(234,67,33)" fg:x="281" fg:w="48"/><text x="1.7464%" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (48 samples, 0.26%)</title><rect x="1.4964%" y="548" width="0.2556%" height="15" fill="rgb(247,98,35)" fg:x="281" fg:w="48"/><text x="1.7464%" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (48 samples, 0.26%)</title><rect x="1.4964%" y="564" width="0.2556%" height="15" fill="rgb(247,138,52)" fg:x="281" fg:w="48"/><text x="1.7464%" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (48 samples, 0.26%)</title><rect x="1.4964%" y="580" width="0.2556%" height="15" fill="rgb(213,79,30)" fg:x="281" fg:w="48"/><text x="1.7464%" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (48 samples, 0.26%)</title><rect x="1.4964%" y="596" width="0.2556%" height="15" fill="rgb(246,177,23)" fg:x="281" fg:w="48"/><text x="1.7464%" y="606.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/exc.py:11) (48 samples, 0.26%)</title><rect x="1.4964%" y="612" width="0.2556%" height="15" fill="rgb(230,62,27)" fg:x="281" fg:w="48"/><text x="1.7464%" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (48 samples, 0.26%)</title><rect x="1.4964%" y="628" width="0.2556%" height="15" fill="rgb(216,154,8)" fg:x="281" fg:w="48"/><text x="1.7464%" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (48 samples, 0.26%)</title><rect x="1.4964%" y="644" width="0.2556%" height="15" fill="rgb(244,35,45)" fg:x="281" fg:w="48"/><text x="1.7464%" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (48 samples, 0.26%)</title><rect x="1.4964%" y="660" width="0.2556%" height="15" fill="rgb(251,115,12)" fg:x="281" fg:w="48"/><text x="1.7464%" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (48 samples, 0.26%)</title><rect x="1.4964%" y="676" width="0.2556%" height="15" fill="rgb(240,54,50)" fg:x="281" fg:w="48"/><text x="1.7464%" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (48 samples, 0.26%)</title><rect x="1.4964%" y="692" width="0.2556%" height="15" fill="rgb(233,84,52)" fg:x="281" fg:w="48"/><text x="1.7464%" y="702.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/utils.py:66) (35 samples, 0.19%)</title><rect x="1.5657%" y="708" width="0.1864%" height="15" fill="rgb(207,117,47)" fg:x="294" fg:w="35"/><text x="1.8157%" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (35 samples, 0.19%)</title><rect x="1.5657%" y="724" width="0.1864%" height="15" fill="rgb(249,43,39)" fg:x="294" fg:w="35"/><text x="1.8157%" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (34 samples, 0.18%)</title><rect x="1.5710%" y="740" width="0.1811%" height="15" fill="rgb(209,38,44)" fg:x="295" fg:w="34"/><text x="1.8210%" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (34 samples, 0.18%)</title><rect x="1.5710%" y="756" width="0.1811%" height="15" fill="rgb(236,212,23)" fg:x="295" fg:w="34"/><text x="1.8210%" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (34 samples, 0.18%)</title><rect x="1.5710%" y="772" width="0.1811%" height="15" fill="rgb(242,79,21)" fg:x="295" fg:w="34"/><text x="1.8210%" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (34 samples, 0.18%)</title><rect x="1.5710%" y="788" width="0.1811%" height="15" fill="rgb(211,96,35)" fg:x="295" fg:w="34"/><text x="1.8210%" y="798.50"></text></g><g><title>&lt;module&gt; (torch/fx/experimental/symbolic_shapes.py:74) (32 samples, 0.17%)</title><rect x="1.5816%" y="804" width="0.1704%" height="15" fill="rgb(253,215,40)" fg:x="297" fg:w="32"/><text x="1.8316%" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (32 samples, 0.17%)</title><rect x="1.5816%" y="820" width="0.1704%" height="15" fill="rgb(211,81,21)" fg:x="297" fg:w="32"/><text x="1.8316%" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (32 samples, 0.17%)</title><rect x="1.5816%" y="836" width="0.1704%" height="15" fill="rgb(208,190,38)" fg:x="297" fg:w="32"/><text x="1.8316%" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (32 samples, 0.17%)</title><rect x="1.5816%" y="852" width="0.1704%" height="15" fill="rgb(235,213,38)" fg:x="297" fg:w="32"/><text x="1.8316%" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (32 samples, 0.17%)</title><rect x="1.5816%" y="868" width="0.1704%" height="15" fill="rgb(237,122,38)" fg:x="297" fg:w="32"/><text x="1.8316%" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (32 samples, 0.17%)</title><rect x="1.5816%" y="884" width="0.1704%" height="15" fill="rgb(244,218,35)" fg:x="297" fg:w="32"/><text x="1.8316%" y="894.50"></text></g><g><title>&lt;module&gt; (torch/utils/_sympy/functions.py:18) (31 samples, 0.17%)</title><rect x="1.5870%" y="900" width="0.1651%" height="15" fill="rgb(240,68,47)" fg:x="298" fg:w="31"/><text x="1.8370%" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (31 samples, 0.17%)</title><rect x="1.5870%" y="916" width="0.1651%" height="15" fill="rgb(210,16,53)" fg:x="298" fg:w="31"/><text x="1.8370%" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (31 samples, 0.17%)</title><rect x="1.5870%" y="932" width="0.1651%" height="15" fill="rgb(235,124,12)" fg:x="298" fg:w="31"/><text x="1.8370%" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (31 samples, 0.17%)</title><rect x="1.5870%" y="948" width="0.1651%" height="15" fill="rgb(224,169,11)" fg:x="298" fg:w="31"/><text x="1.8370%" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (30 samples, 0.16%)</title><rect x="1.5923%" y="964" width="0.1598%" height="15" fill="rgb(250,166,2)" fg:x="299" fg:w="30"/><text x="1.8423%" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (30 samples, 0.16%)</title><rect x="1.5923%" y="980" width="0.1598%" height="15" fill="rgb(242,216,29)" fg:x="299" fg:w="30"/><text x="1.8423%" y="990.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/symbolic_convert.py:30) (21 samples, 0.11%)</title><rect x="1.7521%" y="516" width="0.1118%" height="15" fill="rgb(230,116,27)" fg:x="329" fg:w="21"/><text x="2.0021%" y="526.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (21 samples, 0.11%)</title><rect x="1.7521%" y="532" width="0.1118%" height="15" fill="rgb(228,99,48)" fg:x="329" fg:w="21"/><text x="2.0021%" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (21 samples, 0.11%)</title><rect x="1.7521%" y="548" width="0.1118%" height="15" fill="rgb(253,11,6)" fg:x="329" fg:w="21"/><text x="2.0021%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (21 samples, 0.11%)</title><rect x="1.7521%" y="564" width="0.1118%" height="15" fill="rgb(247,143,39)" fg:x="329" fg:w="21"/><text x="2.0021%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (21 samples, 0.11%)</title><rect x="1.7521%" y="580" width="0.1118%" height="15" fill="rgb(236,97,10)" fg:x="329" fg:w="21"/><text x="2.0021%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (21 samples, 0.11%)</title><rect x="1.7521%" y="596" width="0.1118%" height="15" fill="rgb(233,208,19)" fg:x="329" fg:w="21"/><text x="2.0021%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (21 samples, 0.11%)</title><rect x="1.7521%" y="612" width="0.1118%" height="15" fill="rgb(216,164,2)" fg:x="329" fg:w="21"/><text x="2.0021%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (21 samples, 0.11%)</title><rect x="1.7521%" y="628" width="0.1118%" height="15" fill="rgb(220,129,5)" fg:x="329" fg:w="21"/><text x="2.0021%" y="638.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/trace_rules.py:46) (19 samples, 0.10%)</title><rect x="1.7627%" y="644" width="0.1012%" height="15" fill="rgb(242,17,10)" fg:x="331" fg:w="19"/><text x="2.0127%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (19 samples, 0.10%)</title><rect x="1.7627%" y="660" width="0.1012%" height="15" fill="rgb(242,107,0)" fg:x="331" fg:w="19"/><text x="2.0127%" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (19 samples, 0.10%)</title><rect x="1.7627%" y="676" width="0.1012%" height="15" fill="rgb(251,28,31)" fg:x="331" fg:w="19"/><text x="2.0127%" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (19 samples, 0.10%)</title><rect x="1.7627%" y="692" width="0.1012%" height="15" fill="rgb(233,223,10)" fg:x="331" fg:w="19"/><text x="2.0127%" y="702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (19 samples, 0.10%)</title><rect x="1.7627%" y="708" width="0.1012%" height="15" fill="rgb(215,21,27)" fg:x="331" fg:w="19"/><text x="2.0127%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (19 samples, 0.10%)</title><rect x="1.7627%" y="724" width="0.1012%" height="15" fill="rgb(232,23,21)" fg:x="331" fg:w="19"/><text x="2.0127%" y="734.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/__init__.py:3) (74 samples, 0.39%)</title><rect x="1.4858%" y="292" width="0.3941%" height="15" fill="rgb(244,5,23)" fg:x="279" fg:w="74"/><text x="1.7358%" y="302.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (74 samples, 0.39%)</title><rect x="1.4858%" y="308" width="0.3941%" height="15" fill="rgb(226,81,46)" fg:x="279" fg:w="74"/><text x="1.7358%" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (74 samples, 0.39%)</title><rect x="1.4858%" y="324" width="0.3941%" height="15" fill="rgb(247,70,30)" fg:x="279" fg:w="74"/><text x="1.7358%" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (74 samples, 0.39%)</title><rect x="1.4858%" y="340" width="0.3941%" height="15" fill="rgb(212,68,19)" fg:x="279" fg:w="74"/><text x="1.7358%" y="350.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (74 samples, 0.39%)</title><rect x="1.4858%" y="356" width="0.3941%" height="15" fill="rgb(240,187,13)" fg:x="279" fg:w="74"/><text x="1.7358%" y="366.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (74 samples, 0.39%)</title><rect x="1.4858%" y="372" width="0.3941%" height="15" fill="rgb(223,113,26)" fg:x="279" fg:w="74"/><text x="1.7358%" y="382.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (74 samples, 0.39%)</title><rect x="1.4858%" y="388" width="0.3941%" height="15" fill="rgb(206,192,2)" fg:x="279" fg:w="74"/><text x="1.7358%" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (74 samples, 0.39%)</title><rect x="1.4858%" y="404" width="0.3941%" height="15" fill="rgb(241,108,4)" fg:x="279" fg:w="74"/><text x="1.7358%" y="414.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/convert_frame.py:33) (74 samples, 0.39%)</title><rect x="1.4858%" y="420" width="0.3941%" height="15" fill="rgb(247,173,49)" fg:x="279" fg:w="74"/><text x="1.7358%" y="430.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (74 samples, 0.39%)</title><rect x="1.4858%" y="436" width="0.3941%" height="15" fill="rgb(224,114,35)" fg:x="279" fg:w="74"/><text x="1.7358%" y="446.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (74 samples, 0.39%)</title><rect x="1.4858%" y="452" width="0.3941%" height="15" fill="rgb(245,159,27)" fg:x="279" fg:w="74"/><text x="1.7358%" y="462.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (74 samples, 0.39%)</title><rect x="1.4858%" y="468" width="0.3941%" height="15" fill="rgb(245,172,44)" fg:x="279" fg:w="74"/><text x="1.7358%" y="478.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (74 samples, 0.39%)</title><rect x="1.4858%" y="484" width="0.3941%" height="15" fill="rgb(236,23,11)" fg:x="279" fg:w="74"/><text x="1.7358%" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (74 samples, 0.39%)</title><rect x="1.4858%" y="500" width="0.3941%" height="15" fill="rgb(205,117,38)" fg:x="279" fg:w="74"/><text x="1.7358%" y="510.50"></text></g><g><title>&lt;module&gt; (train.py:31) (92 samples, 0.49%)</title><rect x="1.4166%" y="68" width="0.4899%" height="15" fill="rgb(237,72,25)" fg:x="266" fg:w="92"/><text x="1.6666%" y="78.50"></text></g><g><title>__init__ (stable_baselines3/ppo/ppo.py:171) (92 samples, 0.49%)</title><rect x="1.4166%" y="84" width="0.4899%" height="15" fill="rgb(244,70,9)" fg:x="266" fg:w="92"/><text x="1.6666%" y="94.50"></text></g><g><title>_setup_model (stable_baselines3/ppo/ppo.py:174) (92 samples, 0.49%)</title><rect x="1.4166%" y="100" width="0.4899%" height="15" fill="rgb(217,125,39)" fg:x="266" fg:w="92"/><text x="1.6666%" y="110.50"></text></g><g><title>_setup_model (stable_baselines3/common/on_policy_algorithm.py:135) (92 samples, 0.49%)</title><rect x="1.4166%" y="116" width="0.4899%" height="15" fill="rgb(235,36,10)" fg:x="266" fg:w="92"/><text x="1.6666%" y="126.50"></text></g><g><title>__init__ (stable_baselines3/common/policies.py:535) (92 samples, 0.49%)</title><rect x="1.4166%" y="132" width="0.4899%" height="15" fill="rgb(251,123,47)" fg:x="266" fg:w="92"/><text x="1.6666%" y="142.50"></text></g><g><title>_build (stable_baselines3/common/policies.py:634) (79 samples, 0.42%)</title><rect x="1.4858%" y="148" width="0.4207%" height="15" fill="rgb(221,13,13)" fg:x="279" fg:w="79"/><text x="1.7358%" y="158.50"></text></g><g><title>__init__ (torch/optim/adam.py:99) (79 samples, 0.42%)</title><rect x="1.4858%" y="164" width="0.4207%" height="15" fill="rgb(238,131,9)" fg:x="279" fg:w="79"/><text x="1.7358%" y="174.50"></text></g><g><title>__init__ (torch/optim/optimizer.py:377) (79 samples, 0.42%)</title><rect x="1.4858%" y="180" width="0.4207%" height="15" fill="rgb(211,50,8)" fg:x="279" fg:w="79"/><text x="1.7358%" y="190.50"></text></g><g><title>inner (torch/_compile.py:27) (79 samples, 0.42%)</title><rect x="1.4858%" y="196" width="0.4207%" height="15" fill="rgb(245,182,24)" fg:x="279" fg:w="79"/><text x="1.7358%" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (79 samples, 0.42%)</title><rect x="1.4858%" y="212" width="0.4207%" height="15" fill="rgb(242,14,37)" fg:x="279" fg:w="79"/><text x="1.7358%" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (79 samples, 0.42%)</title><rect x="1.4858%" y="228" width="0.4207%" height="15" fill="rgb(246,228,12)" fg:x="279" fg:w="79"/><text x="1.7358%" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (79 samples, 0.42%)</title><rect x="1.4858%" y="244" width="0.4207%" height="15" fill="rgb(213,55,15)" fg:x="279" fg:w="79"/><text x="1.7358%" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (79 samples, 0.42%)</title><rect x="1.4858%" y="260" width="0.4207%" height="15" fill="rgb(209,9,3)" fg:x="279" fg:w="79"/><text x="1.7358%" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (79 samples, 0.42%)</title><rect x="1.4858%" y="276" width="0.4207%" height="15" fill="rgb(230,59,30)" fg:x="279" fg:w="79"/><text x="1.7358%" y="286.50"></text></g><g><title>__init__ (utils.py:29) (20 samples, 0.11%)</title><rect x="1.9651%" y="180" width="0.1065%" height="15" fill="rgb(209,121,21)" fg:x="369" fg:w="20"/><text x="2.2151%" y="190.50"></text></g><g><title>read_tif_to_array (utils.py:194) (20 samples, 0.11%)</title><rect x="1.9651%" y="196" width="0.1065%" height="15" fill="rgb(220,109,13)" fg:x="369" fg:w="20"/><text x="2.2151%" y="206.50"></text></g><g><title>__init__ (utils.py:32) (26 samples, 0.14%)</title><rect x="2.0929%" y="180" width="0.1385%" height="15" fill="rgb(232,18,1)" fg:x="393" fg:w="26"/><text x="2.3429%" y="190.50"></text></g><g><title>reset (env.py:100) (75 samples, 0.40%)</title><rect x="1.9065%" y="164" width="0.3994%" height="15" fill="rgb(215,41,42)" fg:x="358" fg:w="75"/><text x="2.1565%" y="174.50"></text></g><g><title>_get_single_observation (env.py:34) (21 samples, 0.11%)</title><rect x="2.3059%" y="196" width="0.1118%" height="15" fill="rgb(224,123,36)" fg:x="433" fg:w="21"/><text x="2.5559%" y="206.50"></text></g><g><title>__getitem__ (pandas/core/indexing.py:1191) (20 samples, 0.11%)</title><rect x="2.3112%" y="212" width="0.1065%" height="15" fill="rgb(240,125,3)" fg:x="434" fg:w="20"/><text x="2.5612%" y="222.50"></text></g><g><title>learn (stable_baselines3/common/on_policy_algorithm.py:315) (109 samples, 0.58%)</title><rect x="1.9065%" y="100" width="0.5805%" height="15" fill="rgb(205,98,50)" fg:x="358" fg:w="109"/><text x="2.1565%" y="110.50"></text></g><g><title>_setup_learn (stable_baselines3/common/base_class.py:424) (109 samples, 0.58%)</title><rect x="1.9065%" y="116" width="0.5805%" height="15" fill="rgb(205,185,37)" fg:x="358" fg:w="109"/><text x="2.1565%" y="126.50"></text></g><g><title>reset (stable_baselines3/common/vec_env/dummy_vec_env.py:78) (109 samples, 0.58%)</title><rect x="1.9065%" y="132" width="0.5805%" height="15" fill="rgb(238,207,15)" fg:x="358" fg:w="109"/><text x="2.1565%" y="142.50"></text></g><g><title>reset (stable_baselines3/common/monitor.py:83) (109 samples, 0.58%)</title><rect x="1.9065%" y="148" width="0.5805%" height="15" fill="rgb(213,199,42)" fg:x="358" fg:w="109"/><text x="2.1565%" y="158.50"></text></g><g><title>reset (env.py:102) (34 samples, 0.18%)</title><rect x="2.3059%" y="164" width="0.1811%" height="15" fill="rgb(235,201,11)" fg:x="433" fg:w="34"/><text x="2.5559%" y="174.50"></text></g><g><title>_get_observation (env.py:62) (34 samples, 0.18%)</title><rect x="2.3059%" y="180" width="0.1811%" height="15" fill="rgb(207,46,11)" fg:x="433" fg:w="34"/><text x="2.5559%" y="190.50"></text></g><g><title>forward (stable_baselines3/common/policies.py:647) (25 samples, 0.13%)</title><rect x="2.4870%" y="164" width="0.1331%" height="15" fill="rgb(241,35,35)" fg:x="467" fg:w="25"/><text x="2.7370%" y="174.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1739) (25 samples, 0.13%)</title><rect x="2.4870%" y="180" width="0.1331%" height="15" fill="rgb(243,32,47)" fg:x="467" fg:w="25"/><text x="2.7370%" y="190.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1750) (25 samples, 0.13%)</title><rect x="2.4870%" y="196" width="0.1331%" height="15" fill="rgb(247,202,23)" fg:x="467" fg:w="25"/><text x="2.7370%" y="206.50"></text></g><g><title>forward (stable_baselines3/common/torch_layers.py:257) (25 samples, 0.13%)</title><rect x="2.4870%" y="212" width="0.1331%" height="15" fill="rgb(219,102,11)" fg:x="467" fg:w="25"/><text x="2.7370%" y="222.50"></text></g><g><title>collect_rollouts (stable_baselines3/common/on_policy_algorithm.py:202) (33 samples, 0.18%)</title><rect x="2.4870%" y="116" width="0.1757%" height="15" fill="rgb(243,110,44)" fg:x="467" fg:w="33"/><text x="2.7370%" y="126.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1739) (33 samples, 0.18%)</title><rect x="2.4870%" y="132" width="0.1757%" height="15" fill="rgb(222,74,54)" fg:x="467" fg:w="33"/><text x="2.7370%" y="142.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1750) (33 samples, 0.18%)</title><rect x="2.4870%" y="148" width="0.1757%" height="15" fill="rgb(216,99,12)" fg:x="467" fg:w="33"/><text x="2.7370%" y="158.50"></text></g><g><title>__getitem__ (geopandas/array.py:421) (75 samples, 0.40%)</title><rect x="3.2964%" y="244" width="0.3994%" height="15" fill="rgb(226,22,26)" fg:x="619" fg:w="75"/><text x="3.5464%" y="254.50"></text></g><g><title>__instancecheck__ (&lt;frozen abc&gt;:119) (52 samples, 0.28%)</title><rect x="3.4189%" y="260" width="0.2769%" height="15" fill="rgb(217,163,10)" fg:x="642" fg:w="52"/><text x="3.6689%" y="270.50"></text></g><g><title>__subclasscheck__ (&lt;frozen abc&gt;:123) (25 samples, 0.13%)</title><rect x="3.5627%" y="276" width="0.1331%" height="15" fill="rgb(213,25,53)" fg:x="669" fg:w="25"/><text x="3.8127%" y="286.50"></text></g><g><title>__iter__ (pandas/core/arrays/base.py:497) (93 samples, 0.50%)</title><rect x="3.2485%" y="228" width="0.4953%" height="15" fill="rgb(252,105,26)" fg:x="610" fg:w="93"/><text x="3.4985%" y="238.50"></text></g><g><title>get_sum_angle_index (utils.py:177) (225 samples, 1.20%)</title><rect x="2.6787%" y="212" width="1.1982%" height="15" fill="rgb(220,39,43)" fg:x="503" fg:w="225"/><text x="2.9287%" y="222.50"></text></g><g><title>_calculate_reward (env.py:89) (238 samples, 1.27%)</title><rect x="2.6787%" y="196" width="1.2674%" height="15" fill="rgb(229,68,48)" fg:x="503" fg:w="238"/><text x="2.9287%" y="206.50"></text></g><g><title>update_angle_index (utils.py:104) (30 samples, 0.16%)</title><rect x="4.1911%" y="228" width="0.1598%" height="15" fill="rgb(252,8,32)" fg:x="787" fg:w="30"/><text x="4.4411%" y="238.50"></text></g><g><title>update_angle_index (utils.py:106) (338 samples, 1.80%)</title><rect x="4.3508%" y="228" width="1.8000%" height="15" fill="rgb(223,20,43)" fg:x="817" fg:w="338"/><text x="4.6008%" y="238.50">u..</text></g><g><title>update_angle_index (utils.py:107) (265 samples, 1.41%)</title><rect x="6.1508%" y="228" width="1.4112%" height="15" fill="rgb(229,81,49)" fg:x="1155" fg:w="265"/><text x="6.4008%" y="238.50"></text></g><g><title>_angle (utils.py:58) (214 samples, 1.14%)</title><rect x="7.9242%" y="244" width="1.1396%" height="15" fill="rgb(236,28,36)" fg:x="1488" fg:w="214"/><text x="8.1742%" y="254.50"></text></g><g><title>_dot_product (utils.py:55) (185 samples, 0.99%)</title><rect x="8.0786%" y="260" width="0.9852%" height="15" fill="rgb(249,185,26)" fg:x="1517" fg:w="185"/><text x="8.3286%" y="270.50"></text></g><g><title>_angle (utils.py:60) (245 samples, 1.30%)</title><rect x="9.0638%" y="244" width="1.3047%" height="15" fill="rgb(249,174,33)" fg:x="1702" fg:w="245"/><text x="9.3138%" y="254.50"></text></g><g><title>_dot_product (utils.py:55) (192 samples, 1.02%)</title><rect x="9.3460%" y="260" width="1.0225%" height="15" fill="rgb(233,201,37)" fg:x="1755" fg:w="192"/><text x="9.5960%" y="270.50"></text></g><g><title>_angle (utils.py:61) (215 samples, 1.14%)</title><rect x="10.3685%" y="244" width="1.1450%" height="15" fill="rgb(221,78,26)" fg:x="1947" fg:w="215"/><text x="10.6185%" y="254.50"></text></g><g><title>_dot_product (utils.py:55) (177 samples, 0.94%)</title><rect x="10.5709%" y="260" width="0.9426%" height="15" fill="rgb(250,127,30)" fg:x="1985" fg:w="177"/><text x="10.8209%" y="270.50"></text></g><g><title>_angle (utils.py:62) (24 samples, 0.13%)</title><rect x="11.5135%" y="244" width="0.1278%" height="15" fill="rgb(230,49,44)" fg:x="2162" fg:w="24"/><text x="11.7635%" y="254.50"></text></g><g><title>_angle (utils.py:66) (28 samples, 0.15%)</title><rect x="11.8064%" y="244" width="0.1491%" height="15" fill="rgb(229,67,23)" fg:x="2217" fg:w="28"/><text x="12.0564%" y="254.50"></text></g><g><title>cross (numpy/_core/numeric.py:1652) (28 samples, 0.15%)</title><rect x="12.5785%" y="260" width="0.1491%" height="15" fill="rgb(249,83,47)" fg:x="2362" fg:w="28"/><text x="12.8285%" y="270.50"></text></g><g><title>normalize_axis_tuple (numpy/_core/numeric.py:1431) (19 samples, 0.10%)</title><rect x="13.2868%" y="292" width="0.1012%" height="15" fill="rgb(215,43,3)" fg:x="2495" fg:w="19"/><text x="13.5368%" y="302.50"></text></g><g><title>normalize_axis_tuple (numpy/_core/numeric.py:1435) (43 samples, 0.23%)</title><rect x="13.3880%" y="292" width="0.2290%" height="15" fill="rgb(238,154,13)" fg:x="2514" fg:w="43"/><text x="13.6380%" y="302.50"></text></g><g><title>moveaxis (numpy/_core/numeric.py:1503) (118 samples, 0.63%)</title><rect x="13.1058%" y="276" width="0.6284%" height="15" fill="rgb(219,56,2)" fg:x="2461" fg:w="118"/><text x="13.3558%" y="286.50"></text></g><g><title>normalize_axis_tuple (numpy/_core/numeric.py:1436) (22 samples, 0.12%)</title><rect x="13.6170%" y="292" width="0.1172%" height="15" fill="rgb(233,0,4)" fg:x="2557" fg:w="22"/><text x="13.8670%" y="302.50"></text></g><g><title>normalize_axis_tuple (numpy/_core/numeric.py:1435) (32 samples, 0.17%)</title><rect x="13.8620%" y="292" width="0.1704%" height="15" fill="rgb(235,30,7)" fg:x="2603" fg:w="32"/><text x="14.1120%" y="302.50"></text></g><g><title>normalize_axis_tuple (numpy/_core/numeric.py:1436) (21 samples, 0.11%)</title><rect x="14.0324%" y="292" width="0.1118%" height="15" fill="rgb(250,79,13)" fg:x="2635" fg:w="21"/><text x="14.2824%" y="302.50"></text></g><g><title>moveaxis (numpy/_core/numeric.py:1504) (78 samples, 0.42%)</title><rect x="13.7342%" y="276" width="0.4154%" height="15" fill="rgb(211,146,34)" fg:x="2579" fg:w="78"/><text x="13.9842%" y="286.50"></text></g><g><title>moveaxis (numpy/_core/numeric.py:1509) (40 samples, 0.21%)</title><rect x="14.1655%" y="276" width="0.2130%" height="15" fill="rgb(228,22,38)" fg:x="2660" fg:w="40"/><text x="14.4155%" y="286.50"></text></g><g><title>moveaxis (numpy/_core/numeric.py:1511) (101 samples, 0.54%)</title><rect x="14.3785%" y="276" width="0.5379%" height="15" fill="rgb(235,168,5)" fg:x="2700" fg:w="101"/><text x="14.6285%" y="286.50"></text></g><g><title>cross (numpy/_core/numeric.py:1656) (464 samples, 2.47%)</title><rect x="12.7809%" y="260" width="2.4710%" height="15" fill="rgb(221,155,16)" fg:x="2400" fg:w="464"/><text x="13.0309%" y="270.50">cr..</text></g><g><title>moveaxis (numpy/_core/numeric.py:1514) (48 samples, 0.26%)</title><rect x="14.9963%" y="276" width="0.2556%" height="15" fill="rgb(215,215,53)" fg:x="2816" fg:w="48"/><text x="15.2463%" y="286.50"></text></g><g><title>normalize_axis_tuple (numpy/_core/numeric.py:1435) (32 samples, 0.17%)</title><rect x="15.7791%" y="292" width="0.1704%" height="15" fill="rgb(223,4,10)" fg:x="2963" fg:w="32"/><text x="16.0291%" y="302.50"></text></g><g><title>moveaxis (numpy/_core/numeric.py:1503) (95 samples, 0.51%)</title><rect x="15.5501%" y="276" width="0.5059%" height="15" fill="rgb(234,103,6)" fg:x="2920" fg:w="95"/><text x="15.8001%" y="286.50"></text></g><g><title>normalize_axis_tuple (numpy/_core/numeric.py:1436) (20 samples, 0.11%)</title><rect x="15.9495%" y="292" width="0.1065%" height="15" fill="rgb(227,97,0)" fg:x="2995" fg:w="20"/><text x="16.1995%" y="302.50"></text></g><g><title>normalize_axis_tuple (numpy/_core/numeric.py:1435) (33 samples, 0.18%)</title><rect x="16.1625%" y="292" width="0.1757%" height="15" fill="rgb(234,150,53)" fg:x="3035" fg:w="33"/><text x="16.4125%" y="302.50"></text></g><g><title>normalize_axis_tuple (numpy/_core/numeric.py:1436) (20 samples, 0.11%)</title><rect x="16.3383%" y="292" width="0.1065%" height="15" fill="rgb(228,201,54)" fg:x="3068" fg:w="20"/><text x="16.5883%" y="302.50"></text></g><g><title>moveaxis (numpy/_core/numeric.py:1504) (74 samples, 0.39%)</title><rect x="16.0560%" y="276" width="0.3941%" height="15" fill="rgb(222,22,37)" fg:x="3015" fg:w="74"/><text x="16.3060%" y="286.50"></text></g><g><title>moveaxis (numpy/_core/numeric.py:1509) (25 samples, 0.13%)</title><rect x="16.5034%" y="276" width="0.1331%" height="15" fill="rgb(237,53,32)" fg:x="3099" fg:w="25"/><text x="16.7534%" y="286.50"></text></g><g><title>moveaxis (numpy/_core/numeric.py:1511) (82 samples, 0.44%)</title><rect x="16.6365%" y="276" width="0.4367%" height="15" fill="rgb(233,25,53)" fg:x="3124" fg:w="82"/><text x="16.8865%" y="286.50"></text></g><g><title>cross (numpy/_core/numeric.py:1657) (377 samples, 2.01%)</title><rect x="15.2519%" y="260" width="2.0077%" height="15" fill="rgb(210,40,34)" fg:x="2864" fg:w="377"/><text x="15.5019%" y="270.50">c..</text></g><g><title>moveaxis (numpy/_core/numeric.py:1514) (32 samples, 0.17%)</title><rect x="17.0891%" y="276" width="0.1704%" height="15" fill="rgb(241,220,44)" fg:x="3209" fg:w="32"/><text x="17.3391%" y="286.50"></text></g><g><title>cross (numpy/_core/numeric.py:1660) (22 samples, 0.12%)</title><rect x="17.2649%" y="260" width="0.1172%" height="15" fill="rgb(235,28,35)" fg:x="3242" fg:w="22"/><text x="17.5149%" y="270.50"></text></g><g><title>cross (numpy/_core/numeric.py:1664) (368 samples, 1.96%)</title><rect x="17.4353%" y="260" width="1.9597%" height="15" fill="rgb(210,56,17)" fg:x="3274" fg:w="368"/><text x="17.6853%" y="270.50">c..</text></g><g><title>cross (numpy/_core/numeric.py:1671) (143 samples, 0.76%)</title><rect x="19.4004%" y="260" width="0.7615%" height="15" fill="rgb(224,130,29)" fg:x="3643" fg:w="143"/><text x="19.6504%" y="270.50"></text></g><g><title>cross (numpy/_core/numeric.py:1672) (23 samples, 0.12%)</title><rect x="20.1619%" y="260" width="0.1225%" height="15" fill="rgb(235,212,8)" fg:x="3786" fg:w="23"/><text x="20.4119%" y="270.50"></text></g><g><title>cross (numpy/_core/numeric.py:1676) (37 samples, 0.20%)</title><rect x="20.2844%" y="260" width="0.1970%" height="15" fill="rgb(223,33,50)" fg:x="3809" fg:w="37"/><text x="20.5344%" y="270.50"></text></g><g><title>cross (numpy/_core/numeric.py:1677) (34 samples, 0.18%)</title><rect x="20.4814%" y="260" width="0.1811%" height="15" fill="rgb(219,149,13)" fg:x="3846" fg:w="34"/><text x="20.7314%" y="270.50"></text></g><g><title>cross (numpy/_core/numeric.py:1680) (46 samples, 0.24%)</title><rect x="20.6625%" y="260" width="0.2450%" height="15" fill="rgb(250,156,29)" fg:x="3880" fg:w="46"/><text x="20.9125%" y="270.50"></text></g><g><title>cross (numpy/_core/numeric.py:1681) (19 samples, 0.10%)</title><rect x="20.9074%" y="260" width="0.1012%" height="15" fill="rgb(216,193,19)" fg:x="3926" fg:w="19"/><text x="21.1574%" y="270.50"></text></g><g><title>cross (numpy/_core/numeric.py:1700) (99 samples, 0.53%)</title><rect x="21.5678%" y="260" width="0.5272%" height="15" fill="rgb(216,135,14)" fg:x="4050" fg:w="99"/><text x="21.8178%" y="270.50"></text></g><g><title>_angle (utils.py:67) (2,179 samples, 11.60%)</title><rect x="11.9555%" y="244" width="11.6040%" height="15" fill="rgb(241,47,5)" fg:x="2245" fg:w="2179"/><text x="12.2055%" y="254.50">_angle (utils.py:..</text></g><g><title>cross (numpy/_core/numeric.py:1701) (275 samples, 1.46%)</title><rect x="22.0950%" y="260" width="1.4645%" height="15" fill="rgb(233,42,35)" fg:x="4149" fg:w="275"/><text x="22.3450%" y="270.50"></text></g><g><title>_angle (utils.py:68) (187 samples, 1.00%)</title><rect x="23.5595%" y="244" width="0.9958%" height="15" fill="rgb(231,13,6)" fg:x="4424" fg:w="187"/><text x="23.8095%" y="254.50"></text></g><g><title>update_angle_index (utils.py:109) (3,202 samples, 17.05%)</title><rect x="7.5620%" y="228" width="17.0519%" height="15" fill="rgb(207,181,40)" fg:x="1420" fg:w="3202"/><text x="7.8120%" y="238.50">update_angle_index (utils...</text></g><g><title>update_angle_index (utils.py:110) (54 samples, 0.29%)</title><rect x="24.6139%" y="228" width="0.2876%" height="15" fill="rgb(254,173,49)" fg:x="4622" fg:w="54"/><text x="24.8639%" y="238.50"></text></g><g><title>update_angle_index (utils.py:113) (49 samples, 0.26%)</title><rect x="24.9175%" y="228" width="0.2609%" height="15" fill="rgb(221,1,38)" fg:x="4679" fg:w="49"/><text x="25.1675%" y="238.50"></text></g><g><title>map_array (pandas/core/algorithms.py:1724) (35 samples, 0.19%)</title><rect x="25.3275%" y="276" width="0.1864%" height="15" fill="rgb(206,124,46)" fg:x="4756" fg:w="35"/><text x="25.5775%" y="286.50"></text></g><g><title>__init__ (pandas/core/series.py:537) (35 samples, 0.19%)</title><rect x="25.3275%" y="292" width="0.1864%" height="15" fill="rgb(249,21,11)" fg:x="4756" fg:w="35"/><text x="25.5775%" y="302.50"></text></g><g><title>_init_dict (pandas/core/series.py:651) (33 samples, 0.18%)</title><rect x="25.3382%" y="308" width="0.1757%" height="15" fill="rgb(222,201,40)" fg:x="4758" fg:w="33"/><text x="25.5882%" y="318.50"></text></g><g><title>update_angle_index (utils.py:134) (44 samples, 0.23%)</title><rect x="25.3169%" y="228" width="0.2343%" height="15" fill="rgb(235,61,29)" fg:x="4754" fg:w="44"/><text x="25.5669%" y="238.50"></text></g><g><title>map (pandas/core/indexes/base.py:6491) (42 samples, 0.22%)</title><rect x="25.3275%" y="244" width="0.2237%" height="15" fill="rgb(219,207,3)" fg:x="4756" fg:w="42"/><text x="25.5775%" y="254.50"></text></g><g><title>_map_values (pandas/core/base.py:921) (42 samples, 0.22%)</title><rect x="25.3275%" y="260" width="0.2237%" height="15" fill="rgb(222,56,46)" fg:x="4756" fg:w="42"/><text x="25.5775%" y="270.50"></text></g><g><title>__getitem__ (geopandas/array.py:421) (90 samples, 0.48%)</title><rect x="26.2062%" y="260" width="0.4793%" height="15" fill="rgb(239,76,54)" fg:x="4921" fg:w="90"/><text x="26.4562%" y="270.50"></text></g><g><title>__instancecheck__ (&lt;frozen abc&gt;:119) (59 samples, 0.31%)</title><rect x="26.3713%" y="276" width="0.3142%" height="15" fill="rgb(231,124,27)" fg:x="4952" fg:w="59"/><text x="26.6213%" y="286.50"></text></g><g><title>__subclasscheck__ (&lt;frozen abc&gt;:123) (23 samples, 0.12%)</title><rect x="26.5630%" y="292" width="0.1225%" height="15" fill="rgb(249,195,6)" fg:x="4988" fg:w="23"/><text x="26.8130%" y="302.50"></text></g><g><title>__iter__ (pandas/core/arrays/base.py:497) (114 samples, 0.61%)</title><rect x="26.1316%" y="244" width="0.6071%" height="15" fill="rgb(237,174,47)" fg:x="4907" fg:w="114"/><text x="26.3816%" y="254.50"></text></g><g><title>update_angle_index (utils.py:73) (254 samples, 1.35%)</title><rect x="25.5512%" y="228" width="1.3526%" height="15" fill="rgb(206,201,31)" fg:x="4798" fg:w="254"/><text x="25.8012%" y="238.50"></text></g><g><title>wrapped (shapely/decorators.py:77) (176 samples, 0.94%)</title><rect x="27.6387%" y="260" width="0.9373%" height="15" fill="rgb(231,57,52)" fg:x="5190" fg:w="176"/><text x="27.8887%" y="270.50"></text></g><g><title>get_x (shapely/_geometry.py:264) (160 samples, 0.85%)</title><rect x="27.7239%" y="276" width="0.8521%" height="15" fill="rgb(248,177,22)" fg:x="5206" fg:w="160"/><text x="27.9739%" y="286.50"></text></g><g><title>x (shapely/geometry/point.py:88) (328 samples, 1.75%)</title><rect x="27.1009%" y="244" width="1.7467%" height="15" fill="rgb(215,211,37)" fg:x="5089" fg:w="328"/><text x="27.3509%" y="254.50"></text></g><g><title>wrapped (shapely/decorators.py:79) (51 samples, 0.27%)</title><rect x="28.5760%" y="260" width="0.2716%" height="15" fill="rgb(241,128,51)" fg:x="5366" fg:w="51"/><text x="28.8260%" y="270.50"></text></g><g><title>wrapped (shapely/decorators.py:65) (25 samples, 0.13%)</title><rect x="29.0233%" y="260" width="0.1331%" height="15" fill="rgb(227,165,31)" fg:x="5450" fg:w="25"/><text x="29.2733%" y="270.50"></text></g><g><title>wrapped (shapely/decorators.py:77) (166 samples, 0.88%)</title><rect x="29.3535%" y="260" width="0.8840%" height="15" fill="rgb(228,167,24)" fg:x="5512" fg:w="166"/><text x="29.6035%" y="270.50"></text></g><g><title>get_y (shapely/_geometry.py:290) (149 samples, 0.79%)</title><rect x="29.4440%" y="276" width="0.7935%" height="15" fill="rgb(228,143,12)" fg:x="5529" fg:w="149"/><text x="29.6940%" y="286.50"></text></g><g><title>update_angle_index (utils.py:75) (651 samples, 3.47%)</title><rect x="26.9091%" y="228" width="3.4668%" height="15" fill="rgb(249,149,8)" fg:x="5053" fg:w="651"/><text x="27.1591%" y="238.50">upd..</text></g><g><title>y (shapely/geometry/point.py:93) (284 samples, 1.51%)</title><rect x="28.8636%" y="244" width="1.5124%" height="15" fill="rgb(243,35,44)" fg:x="5420" fg:w="284"/><text x="29.1136%" y="254.50"></text></g><g><title>wrapped (shapely/decorators.py:79) (26 samples, 0.14%)</title><rect x="30.2375%" y="260" width="0.1385%" height="15" fill="rgb(246,89,9)" fg:x="5678" fg:w="26"/><text x="30.4875%" y="270.50"></text></g><g><title>update_angle_index (utils.py:77) (31 samples, 0.17%)</title><rect x="30.3760%" y="228" width="0.1651%" height="15" fill="rgb(233,213,13)" fg:x="5704" fg:w="31"/><text x="30.6260%" y="238.50"></text></g><g><title>update_angle_index (utils.py:81) (35 samples, 0.19%)</title><rect x="30.5411%" y="228" width="0.1864%" height="15" fill="rgb(233,141,41)" fg:x="5735" fg:w="35"/><text x="30.7911%" y="238.50"></text></g><g><title>wrapper (sklearn/base.py:1389) (34 samples, 0.18%)</title><rect x="30.5464%" y="244" width="0.1811%" height="15" fill="rgb(239,167,4)" fg:x="5736" fg:w="34"/><text x="30.7964%" y="254.50"></text></g><g><title>fit (sklearn/neighbors/_unsupervised.py:179) (34 samples, 0.18%)</title><rect x="30.5464%" y="260" width="0.1811%" height="15" fill="rgb(209,217,16)" fg:x="5736" fg:w="34"/><text x="30.7964%" y="270.50"></text></g><g><title>_fit (sklearn/neighbors/_base.py:697) (29 samples, 0.15%)</title><rect x="30.5730%" y="276" width="0.1544%" height="15" fill="rgb(219,88,35)" fg:x="5741" fg:w="29"/><text x="30.8230%" y="286.50"></text></g><g><title>__call__ (sklearn/utils/parallel.py:77) (177 samples, 0.94%)</title><rect x="30.7381%" y="260" width="0.9426%" height="15" fill="rgb(220,193,23)" fg:x="5772" fg:w="177"/><text x="30.9881%" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:1918) (177 samples, 0.94%)</title><rect x="30.7381%" y="276" width="0.9426%" height="15" fill="rgb(230,90,52)" fg:x="5772" fg:w="177"/><text x="30.9881%" y="286.50"></text></g><g><title>_get_sequential_output (joblib/parallel.py:1847) (176 samples, 0.94%)</title><rect x="30.7434%" y="292" width="0.9373%" height="15" fill="rgb(252,106,19)" fg:x="5773" fg:w="176"/><text x="30.9934%" y="302.50"></text></g><g><title>__call__ (sklearn/utils/parallel.py:139) (176 samples, 0.94%)</title><rect x="30.7434%" y="308" width="0.9373%" height="15" fill="rgb(206,74,20)" fg:x="5773" fg:w="176"/><text x="30.9934%" y="318.50"></text></g><g><title>update_angle_index (utils.py:82) (180 samples, 0.96%)</title><rect x="30.7274%" y="228" width="0.9586%" height="15" fill="rgb(230,138,44)" fg:x="5770" fg:w="180"/><text x="30.9774%" y="238.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:923) (178 samples, 0.95%)</title><rect x="30.7381%" y="244" width="0.9479%" height="15" fill="rgb(235,182,43)" fg:x="5772" fg:w="178"/><text x="30.9881%" y="254.50"></text></g><g><title>update_angle_index (utils.py:86) (20 samples, 0.11%)</title><rect x="31.7126%" y="228" width="0.1065%" height="15" fill="rgb(242,16,51)" fg:x="5955" fg:w="20"/><text x="31.9626%" y="238.50"></text></g><g><title>update_angle_index (utils.py:89) (1,757 samples, 9.36%)</title><rect x="31.9097%" y="228" width="9.3567%" height="15" fill="rgb(248,9,4)" fg:x="5992" fg:w="1757"/><text x="32.1597%" y="238.50">update_angle_..</text></g><g><title>update_angle_index (utils.py:90) (32 samples, 0.17%)</title><rect x="41.2664%" y="228" width="0.1704%" height="15" fill="rgb(210,31,22)" fg:x="7749" fg:w="32"/><text x="41.5164%" y="238.50"></text></g><g><title>update_angle_index (utils.py:91) (38 samples, 0.20%)</title><rect x="41.4368%" y="228" width="0.2024%" height="15" fill="rgb(239,54,39)" fg:x="7781" fg:w="38"/><text x="41.6868%" y="238.50"></text></g><g><title>_angle (utils.py:58) (248 samples, 1.32%)</title><rect x="42.8107%" y="244" width="1.3207%" height="15" fill="rgb(230,99,41)" fg:x="8039" fg:w="248"/><text x="43.0607%" y="254.50"></text></g><g><title>_dot_product (utils.py:55) (219 samples, 1.17%)</title><rect x="42.9652%" y="260" width="1.1663%" height="15" fill="rgb(253,106,12)" fg:x="8068" fg:w="219"/><text x="43.2152%" y="270.50"></text></g><g><title>_angle (utils.py:60) (235 samples, 1.25%)</title><rect x="44.1314%" y="244" width="1.2515%" height="15" fill="rgb(213,46,41)" fg:x="8287" fg:w="235"/><text x="44.3814%" y="254.50"></text></g><g><title>_dot_product (utils.py:55) (176 samples, 0.94%)</title><rect x="44.4456%" y="260" width="0.9373%" height="15" fill="rgb(215,133,35)" fg:x="8346" fg:w="176"/><text x="44.6956%" y="270.50"></text></g><g><title>_angle (utils.py:61) (200 samples, 1.07%)</title><rect x="45.3829%" y="244" width="1.0651%" height="15" fill="rgb(213,28,5)" fg:x="8522" fg:w="200"/><text x="45.6329%" y="254.50"></text></g><g><title>_dot_product (utils.py:55) (163 samples, 0.87%)</title><rect x="45.5799%" y="260" width="0.8680%" height="15" fill="rgb(215,77,49)" fg:x="8559" fg:w="163"/><text x="45.8299%" y="270.50"></text></g><g><title>update_angle_index (utils.py:92) (912 samples, 4.86%)</title><rect x="41.6392%" y="228" width="4.8567%" height="15" fill="rgb(248,100,22)" fg:x="7819" fg:w="912"/><text x="41.8892%" y="238.50">update..</text></g><g><title>update_angle_index (utils.py:93) (64 samples, 0.34%)</title><rect x="46.4959%" y="228" width="0.3408%" height="15" fill="rgb(208,67,9)" fg:x="8731" fg:w="64"/><text x="46.7459%" y="238.50"></text></g><g><title>update_angle_index (utils.py:95) (54 samples, 0.29%)</title><rect x="46.8367%" y="228" width="0.2876%" height="15" fill="rgb(219,133,21)" fg:x="8795" fg:w="54"/><text x="47.0867%" y="238.50"></text></g><g><title>update_angle_index (utils.py:96) (55 samples, 0.29%)</title><rect x="47.1243%" y="228" width="0.2929%" height="15" fill="rgb(246,46,29)" fg:x="8849" fg:w="55"/><text x="47.3743%" y="238.50"></text></g><g><title>harvest_tree (utils.py:172) (8,214 samples, 43.74%)</title><rect x="3.9834%" y="212" width="43.7427%" height="15" fill="rgb(246,185,52)" fg:x="748" fg:w="8214"/><text x="4.2334%" y="222.50">harvest_tree (utils.py:172)</text></g><g><title>update_angle_index (utils.py:97) (58 samples, 0.31%)</title><rect x="47.4172%" y="228" width="0.3089%" height="15" fill="rgb(252,136,11)" fg:x="8904" fg:w="58"/><text x="47.6672%" y="238.50"></text></g><g><title>update_canopy_closure (utils.py:137) (2,321 samples, 12.36%)</title><rect x="47.7261%" y="228" width="12.3602%" height="15" fill="rgb(219,138,53)" fg:x="8962" fg:w="2321"/><text x="47.9761%" y="238.50">update_canopy_clos..</text></g><g><title>_sum (numpy/_core/_methods.py:52) (1,340 samples, 7.14%)</title><rect x="52.9503%" y="244" width="7.1360%" height="15" fill="rgb(211,51,23)" fg:x="9943" fg:w="1340"/><text x="53.2003%" y="254.50">_sum (nump..</text></g><g><title>_calculate_reward (env.py:90) (10,543 samples, 56.15%)</title><rect x="3.9461%" y="196" width="56.1455%" height="15" fill="rgb(247,221,28)" fg:x="741" fg:w="10543"/><text x="4.1961%" y="206.50">_calculate_reward (env.py:90)</text></g><g><title>harvest_tree (utils.py:173) (2,322 samples, 12.37%)</title><rect x="47.7261%" y="212" width="12.3655%" height="15" fill="rgb(251,222,45)" fg:x="8962" fg:w="2322"/><text x="47.9761%" y="222.50">harvest_tree (util..</text></g><g><title>__getitem__ (geopandas/array.py:421) (76 samples, 0.40%)</title><rect x="60.7147%" y="244" width="0.4047%" height="15" fill="rgb(217,162,53)" fg:x="11401" fg:w="76"/><text x="60.9647%" y="254.50"></text></g><g><title>__instancecheck__ (&lt;frozen abc&gt;:119) (50 samples, 0.27%)</title><rect x="60.8531%" y="260" width="0.2663%" height="15" fill="rgb(229,93,14)" fg:x="11427" fg:w="50"/><text x="61.1031%" y="270.50"></text></g><g><title>__subclasscheck__ (&lt;frozen abc&gt;:123) (22 samples, 0.12%)</title><rect x="61.0022%" y="276" width="0.1172%" height="15" fill="rgb(209,67,49)" fg:x="11455" fg:w="22"/><text x="61.2522%" y="286.50"></text></g><g><title>__iter__ (pandas/core/arrays/base.py:497) (95 samples, 0.51%)</title><rect x="60.6508%" y="228" width="0.5059%" height="15" fill="rgb(213,87,29)" fg:x="11389" fg:w="95"/><text x="60.9008%" y="238.50"></text></g><g><title>_make (collections/__init__.py:452) (31 samples, 0.17%)</title><rect x="61.1886%" y="228" width="0.1651%" height="15" fill="rgb(205,151,52)" fg:x="11490" fg:w="31"/><text x="61.4386%" y="238.50"></text></g><g><title>get_sum_angle_index (utils.py:177) (248 samples, 1.32%)</title><rect x="60.0916%" y="212" width="1.3207%" height="15" fill="rgb(253,215,39)" fg:x="11284" fg:w="248"/><text x="60.3416%" y="222.50"></text></g><g><title>step (env.py:106) (11,051 samples, 58.85%)</title><rect x="2.6627%" y="180" width="58.8508%" height="15" fill="rgb(221,220,41)" fg:x="500" fg:w="11051"/><text x="2.9127%" y="190.50">step (env.py:106)</text></g><g><title>_calculate_reward (env.py:91) (267 samples, 1.42%)</title><rect x="60.0916%" y="196" width="1.4219%" height="15" fill="rgb(218,133,21)" fg:x="11284" fg:w="267"/><text x="60.3416%" y="206.50"></text></g><g><title>__getitem__ (pandas/core/indexing.py:1178) (28 samples, 0.15%)</title><rect x="62.3868%" y="228" width="0.1491%" height="15" fill="rgb(221,193,43)" fg:x="11715" fg:w="28"/><text x="62.6368%" y="238.50"></text></g><g><title>__getitem__ (pandas/core/indexing.py:1189) (28 samples, 0.15%)</title><rect x="62.5732%" y="228" width="0.1491%" height="15" fill="rgb(240,128,52)" fg:x="11750" fg:w="28"/><text x="62.8232%" y="238.50"></text></g><g><title>_get_axis (pandas/core/generic.py:588) (30 samples, 0.16%)</title><rect x="62.9886%" y="260" width="0.1598%" height="15" fill="rgb(253,114,12)" fg:x="11828" fg:w="30"/><text x="63.2386%" y="270.50"></text></g><g><title>_getitem_axis (pandas/core/indexing.py:1404) (52 samples, 0.28%)</title><rect x="62.9567%" y="244" width="0.2769%" height="15" fill="rgb(215,223,47)" fg:x="11822" fg:w="52"/><text x="63.2067%" y="254.50"></text></g><g><title>is_bool_indexer (pandas/core/common.py:126) (120 samples, 0.64%)</title><rect x="63.3081%" y="260" width="0.6390%" height="15" fill="rgb(248,225,23)" fg:x="11888" fg:w="120"/><text x="63.5581%" y="270.50"></text></g><g><title>_instancecheck (pandas/core/dtypes/generic.py:44) (41 samples, 0.22%)</title><rect x="63.7288%" y="276" width="0.2183%" height="15" fill="rgb(250,108,0)" fg:x="11967" fg:w="41"/><text x="63.9788%" y="286.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:38) (20 samples, 0.11%)</title><rect x="63.8407%" y="292" width="0.1065%" height="15" fill="rgb(228,208,7)" fg:x="11988" fg:w="20"/><text x="64.0907%" y="302.50"></text></g><g><title>_getitem_axis (pandas/core/indexing.py:1412) (134 samples, 0.71%)</title><rect x="63.2815%" y="244" width="0.7136%" height="15" fill="rgb(244,45,10)" fg:x="11883" fg:w="134"/><text x="63.5315%" y="254.50"></text></g><g><title>_validate_key (pandas/core/indexing.py:1232) (43 samples, 0.23%)</title><rect x="64.1282%" y="260" width="0.2290%" height="15" fill="rgb(207,125,25)" fg:x="12042" fg:w="43"/><text x="64.3782%" y="270.50"></text></g><g><title>_getitem_axis (pandas/core/indexing.py:1430) (62 samples, 0.33%)</title><rect x="64.0963%" y="244" width="0.3302%" height="15" fill="rgb(210,195,18)" fg:x="12036" fg:w="62"/><text x="64.3463%" y="254.50"></text></g><g><title>xs (pandas/core/generic.py:4266) (39 samples, 0.21%)</title><rect x="64.6554%" y="276" width="0.2077%" height="15" fill="rgb(249,80,12)" fg:x="12141" fg:w="39"/><text x="64.9054%" y="286.50"></text></g><g><title>xs (pandas/core/generic.py:4301) (36 samples, 0.19%)</title><rect x="65.0389%" y="276" width="0.1917%" height="15" fill="rgb(221,65,9)" fg:x="12213" fg:w="36"/><text x="65.2889%" y="286.50"></text></g><g><title>fast_xs (pandas/core/internals/managers.py:1001) (263 samples, 1.40%)</title><rect x="65.4596%" y="292" width="1.4006%" height="15" fill="rgb(235,49,36)" fg:x="12292" fg:w="263"/><text x="65.7096%" y="302.50"></text></g><g><title>mgr_locs (pandas/core/internals/blocks.py:268) (23 samples, 0.12%)</title><rect x="66.7377%" y="308" width="0.1225%" height="15" fill="rgb(225,32,20)" fg:x="12532" fg:w="23"/><text x="66.9877%" y="318.50"></text></g><g><title>iget (pandas/core/internals/blocks.py:1260) (84 samples, 0.45%)</title><rect x="67.5738%" y="308" width="0.4473%" height="15" fill="rgb(215,141,46)" fg:x="12689" fg:w="84"/><text x="67.8238%" y="318.50"></text></g><g><title>iget (pandas/core/internals/blocks.py:2384) (21 samples, 0.11%)</title><rect x="68.0743%" y="308" width="0.1118%" height="15" fill="rgb(250,160,47)" fg:x="12783" fg:w="21"/><text x="68.3243%" y="318.50"></text></g><g><title>__getitem__ (geopandas/array.py:421) (85 samples, 0.45%)</title><rect x="68.3033%" y="324" width="0.4527%" height="15" fill="rgb(216,222,40)" fg:x="12826" fg:w="85"/><text x="68.5533%" y="334.50"></text></g><g><title>__instancecheck__ (&lt;frozen abc&gt;:119) (62 samples, 0.33%)</title><rect x="68.4258%" y="340" width="0.3302%" height="15" fill="rgb(234,217,39)" fg:x="12849" fg:w="62"/><text x="68.6758%" y="350.50"></text></g><g><title>__subclasscheck__ (&lt;frozen abc&gt;:123) (35 samples, 0.19%)</title><rect x="68.5696%" y="356" width="0.1864%" height="15" fill="rgb(207,178,40)" fg:x="12876" fg:w="35"/><text x="68.8196%" y="366.50"></text></g><g><title>fast_xs (pandas/core/internals/managers.py:1002) (371 samples, 1.98%)</title><rect x="66.8602%" y="292" width="1.9757%" height="15" fill="rgb(221,136,13)" fg:x="12555" fg:w="371"/><text x="67.1102%" y="302.50">f..</text></g><g><title>iget (pandas/core/internals/blocks.py:2394) (110 samples, 0.59%)</title><rect x="68.2501%" y="308" width="0.5858%" height="15" fill="rgb(249,199,10)" fg:x="12816" fg:w="110"/><text x="68.5001%" y="318.50"></text></g><g><title>fast_xs (pandas/core/internals/managers.py:1008) (36 samples, 0.19%)</title><rect x="68.9051%" y="292" width="0.1917%" height="15" fill="rgb(249,222,13)" fg:x="12939" fg:w="36"/><text x="69.1551%" y="302.50"></text></g><g><title>new_block (pandas/core/internals/blocks.py:2727) (35 samples, 0.19%)</title><rect x="69.1714%" y="308" width="0.1864%" height="15" fill="rgb(244,185,38)" fg:x="12989" fg:w="35"/><text x="69.4214%" y="318.50"></text></g><g><title>fast_xs (pandas/core/internals/managers.py:1009) (132 samples, 0.70%)</title><rect x="69.0968%" y="292" width="0.7030%" height="15" fill="rgb(236,202,9)" fg:x="12975" fg:w="132"/><text x="69.3468%" y="302.50"></text></g><g><title>new_block (pandas/core/internals/blocks.py:2728) (83 samples, 0.44%)</title><rect x="69.3578%" y="308" width="0.4420%" height="15" fill="rgb(250,229,37)" fg:x="13024" fg:w="83"/><text x="69.6078%" y="318.50"></text></g><g><title>fast_xs (pandas/core/internals/managers.py:1010) (50 samples, 0.27%)</title><rect x="69.7998%" y="292" width="0.2663%" height="15" fill="rgb(206,174,23)" fg:x="13107" fg:w="50"/><text x="70.0498%" y="302.50"></text></g><g><title>find_common_type (pandas/core/dtypes/cast.py:1456) (39 samples, 0.21%)</title><rect x="70.8063%" y="324" width="0.2077%" height="15" fill="rgb(211,33,43)" fg:x="13296" fg:w="39"/><text x="71.0563%" y="334.50"></text></g><g><title>find_common_type (pandas/core/dtypes/cast.py:1460) (163 samples, 0.87%)</title><rect x="71.0140%" y="324" width="0.8680%" height="15" fill="rgb(245,58,50)" fg:x="13335" fg:w="163"/><text x="71.2640%" y="334.50"></text></g><g><title>__hash__ (pandas/core/dtypes/base.py:147) (59 samples, 0.31%)</title><rect x="71.5678%" y="340" width="0.3142%" height="15" fill="rgb(244,68,36)" fg:x="13439" fg:w="59"/><text x="71.8178%" y="350.50"></text></g><g><title>find_common_type (pandas/core/dtypes/cast.py:1462) (73 samples, 0.39%)</title><rect x="71.8820%" y="324" width="0.3888%" height="15" fill="rgb(232,229,15)" fg:x="13498" fg:w="73"/><text x="72.1320%" y="334.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/dtypes/cast.py:1462) (29 samples, 0.15%)</title><rect x="72.1163%" y="340" width="0.1544%" height="15" fill="rgb(254,30,23)" fg:x="13542" fg:w="29"/><text x="72.3663%" y="350.50"></text></g><g><title>find_common_type (pandas/core/dtypes/cast.py:1464) (21 samples, 0.11%)</title><rect x="72.3506%" y="324" width="0.1118%" height="15" fill="rgb(235,160,14)" fg:x="13586" fg:w="21"/><text x="72.6006%" y="334.50"></text></g><g><title>_get_common_dtype (pandas/core/dtypes/base.py:388) (94 samples, 0.50%)</title><rect x="72.4944%" y="340" width="0.5006%" height="15" fill="rgb(212,155,44)" fg:x="13613" fg:w="94"/><text x="72.7444%" y="350.50"></text></g><g><title>__hash__ (pandas/core/dtypes/base.py:147) (48 samples, 0.26%)</title><rect x="72.7394%" y="356" width="0.2556%" height="15" fill="rgb(226,2,50)" fg:x="13659" fg:w="48"/><text x="72.9894%" y="366.50"></text></g><g><title>find_common_type (pandas/core/dtypes/cast.py:1465) (101 samples, 0.54%)</title><rect x="72.4625%" y="324" width="0.5379%" height="15" fill="rgb(234,177,6)" fg:x="13607" fg:w="101"/><text x="72.7125%" y="334.50"></text></g><g><title>fast_xs (pandas/core/internals/managers.py:984) (576 samples, 3.07%)</title><rect x="70.1140%" y="292" width="3.0674%" height="15" fill="rgb(217,24,9)" fg:x="13166" fg:w="576"/><text x="70.3640%" y="302.50">fas..</text></g><g><title>interleaved_dtype (pandas/core/internals/base.py:394) (467 samples, 2.49%)</title><rect x="70.6944%" y="308" width="2.4870%" height="15" fill="rgb(220,13,46)" fg:x="13275" fg:w="467"/><text x="70.9444%" y="318.50">in..</text></g><g><title>find_common_type (pandas/core/dtypes/cast.py:1468) (34 samples, 0.18%)</title><rect x="73.0003%" y="324" width="0.1811%" height="15" fill="rgb(239,221,27)" fg:x="13708" fg:w="34"/><text x="73.2503%" y="334.50"></text></g><g><title>fast_xs (pandas/core/internals/managers.py:986) (54 samples, 0.29%)</title><rect x="73.1814%" y="292" width="0.2876%" height="15" fill="rgb(222,198,25)" fg:x="13742" fg:w="54"/><text x="73.4314%" y="302.50"></text></g><g><title>__len__ (pandas/core/internals/base.py:76) (28 samples, 0.15%)</title><rect x="73.3198%" y="308" width="0.1491%" height="15" fill="rgb(211,99,13)" fg:x="13768" fg:w="28"/><text x="73.5698%" y="318.50"></text></g><g><title>fast_xs (pandas/core/internals/managers.py:995) (38 samples, 0.20%)</title><rect x="73.5329%" y="292" width="0.2024%" height="15" fill="rgb(232,111,31)" fg:x="13808" fg:w="38"/><text x="73.7829%" y="302.50"></text></g><g><title>fast_xs (pandas/core/internals/managers.py:996) (22 samples, 0.12%)</title><rect x="73.7352%" y="292" width="0.1172%" height="15" fill="rgb(245,82,37)" fg:x="13846" fg:w="22"/><text x="73.9852%" y="302.50"></text></g><g><title>xs (pandas/core/generic.py:4321) (1,625 samples, 8.65%)</title><rect x="65.3904%" y="276" width="8.6537%" height="15" fill="rgb(227,149,46)" fg:x="12279" fg:w="1625"/><text x="65.6404%" y="286.50">xs (pandas/c..</text></g><g><title>fast_xs (pandas/core/internals/managers.py:998) (36 samples, 0.19%)</title><rect x="73.8524%" y="292" width="0.1917%" height="15" fill="rgb(218,36,50)" fg:x="13868" fg:w="36"/><text x="74.1024%" y="302.50"></text></g><g><title>_constructor_sliced_from_mgr (geopandas/geodataframe.py:1909) (26 samples, 0.14%)</title><rect x="74.1400%" y="292" width="0.1385%" height="15" fill="rgb(226,80,48)" fg:x="13922" fg:w="26"/><text x="74.3900%" y="302.50"></text></g><g><title>_constructor_sliced_from_mgr (geopandas/geodataframe.py:1911) (58 samples, 0.31%)</title><rect x="74.2784%" y="292" width="0.3089%" height="15" fill="rgb(238,224,15)" fg:x="13948" fg:w="58"/><text x="74.5284%" y="302.50"></text></g><g><title>_from_mgr (pandas/core/generic.py:356) (28 samples, 0.15%)</title><rect x="74.7257%" y="308" width="0.1491%" height="15" fill="rgb(241,136,10)" fg:x="14032" fg:w="28"/><text x="74.9757%" y="318.50"></text></g><g><title>__init__ (pandas/core/generic.py:279) (22 samples, 0.12%)</title><rect x="74.9760%" y="324" width="0.1172%" height="15" fill="rgb(208,32,45)" fg:x="14079" fg:w="22"/><text x="75.2260%" y="334.50"></text></g><g><title>__init__ (pandas/core/generic.py:281) (22 samples, 0.12%)</title><rect x="75.1784%" y="324" width="0.1172%" height="15" fill="rgb(207,135,9)" fg:x="14117" fg:w="22"/><text x="75.4284%" y="334.50"></text></g><g><title>__init__ (pandas/core/generic.py:282) (19 samples, 0.10%)</title><rect x="75.2956%" y="324" width="0.1012%" height="15" fill="rgb(206,86,44)" fg:x="14139" fg:w="19"/><text x="75.5456%" y="334.50"></text></g><g><title>xs (pandas/core/generic.py:4323) (334 samples, 1.78%)</title><rect x="74.0441%" y="276" width="1.7787%" height="15" fill="rgb(245,177,15)" fg:x="13904" fg:w="334"/><text x="74.2941%" y="286.50">x..</text></g><g><title>_constructor_sliced_from_mgr (geopandas/geodataframe.py:1913) (229 samples, 1.22%)</title><rect x="74.6033%" y="292" width="1.2195%" height="15" fill="rgb(206,64,50)" fg:x="14009" fg:w="229"/><text x="74.8533%" y="302.50"></text></g><g><title>_from_mgr (pandas/core/generic.py:357) (178 samples, 0.95%)</title><rect x="74.8749%" y="308" width="0.9479%" height="15" fill="rgb(234,36,40)" fg:x="14060" fg:w="178"/><text x="75.1249%" y="318.50"></text></g><g><title>__init__ (pandas/core/generic.py:283) (80 samples, 0.43%)</title><rect x="75.3967%" y="324" width="0.4260%" height="15" fill="rgb(213,64,8)" fg:x="14158" fg:w="80"/><text x="75.6467%" y="334.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6312) (94 samples, 0.50%)</title><rect x="76.1370%" y="292" width="0.5006%" height="15" fill="rgb(210,75,36)" fg:x="14297" fg:w="94"/><text x="76.3870%" y="302.50"></text></g><g><title>xs (pandas/core/generic.py:4324) (198 samples, 1.05%)</title><rect x="75.8228%" y="276" width="1.0544%" height="15" fill="rgb(229,88,21)" fg:x="14238" fg:w="198"/><text x="76.0728%" y="286.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6320) (27 samples, 0.14%)</title><rect x="76.7334%" y="292" width="0.1438%" height="15" fill="rgb(252,204,47)" fg:x="14409" fg:w="27"/><text x="76.9834%" y="302.50"></text></g><g><title>__finalize__ (pandas/core/generic.py:6255) (22 samples, 0.12%)</title><rect x="77.0157%" y="292" width="0.1172%" height="15" fill="rgb(208,77,27)" fg:x="14462" fg:w="22"/><text x="77.2657%" y="302.50"></text></g><g><title>__finalize__ (pandas/core/generic.py:6262) (54 samples, 0.29%)</title><rect x="77.1381%" y="292" width="0.2876%" height="15" fill="rgb(221,76,26)" fg:x="14485" fg:w="54"/><text x="77.3881%" y="302.50"></text></g><g><title>__finalize__ (pandas/core/generic.py:6264) (60 samples, 0.32%)</title><rect x="77.4257%" y="292" width="0.3195%" height="15" fill="rgb(225,139,18)" fg:x="14539" fg:w="60"/><text x="77.6757%" y="302.50"></text></g><g><title>xs (pandas/core/generic.py:4325) (170 samples, 0.91%)</title><rect x="76.8772%" y="276" width="0.9053%" height="15" fill="rgb(230,137,11)" fg:x="14436" fg:w="170"/><text x="77.1272%" y="286.50"></text></g><g><title>_is_view (pandas/core/generic.py:4589) (32 samples, 0.17%)</title><rect x="77.9316%" y="292" width="0.1704%" height="15" fill="rgb(212,28,1)" fg:x="14634" fg:w="32"/><text x="78.1816%" y="302.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6312) (21 samples, 0.11%)</title><rect x="78.2565%" y="308" width="0.1118%" height="15" fill="rgb(248,164,17)" fg:x="14695" fg:w="21"/><text x="78.5065%" y="318.50"></text></g><g><title>__getitem__ (pandas/core/indexing.py:1191) (2,948 samples, 15.70%)</title><rect x="62.8075%" y="228" width="15.6992%" height="15" fill="rgb(222,171,42)" fg:x="11794" fg:w="2948"/><text x="63.0575%" y="238.50">__getitem__ (pandas/core..</text></g><g><title>_getitem_axis (pandas/core/indexing.py:1431) (2,644 samples, 14.08%)</title><rect x="64.4265%" y="244" width="14.0803%" height="15" fill="rgb(243,84,45)" fg:x="12098" fg:w="2644"/><text x="64.6765%" y="254.50">_getitem_axis (pandas..</text></g><g><title>_get_label (pandas/core/indexing.py:1381) (2,633 samples, 14.02%)</title><rect x="64.4850%" y="260" width="14.0217%" height="15" fill="rgb(252,49,23)" fg:x="12109" fg:w="2633"/><text x="64.7350%" y="270.50">_get_label (pandas/co..</text></g><g><title>xs (pandas/core/generic.py:4336) (134 samples, 0.71%)</title><rect x="77.7932%" y="276" width="0.7136%" height="15" fill="rgb(215,19,7)" fg:x="14608" fg:w="134"/><text x="78.0432%" y="286.50"></text></g><g><title>_set_is_copy (pandas/core/generic.py:4385) (71 samples, 0.38%)</title><rect x="78.1287%" y="292" width="0.3781%" height="15" fill="rgb(238,81,41)" fg:x="14671" fg:w="71"/><text x="78.3787%" y="302.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6313) (26 samples, 0.14%)</title><rect x="78.3683%" y="308" width="0.1385%" height="15" fill="rgb(210,199,37)" fg:x="14716" fg:w="26"/><text x="78.6183%" y="318.50"></text></g><g><title>_get_single_observation (env.py:34) (3,085 samples, 16.43%)</title><rect x="62.1632%" y="212" width="16.4288%" height="15" fill="rgb(244,192,49)" fg:x="11673" fg:w="3085"/><text x="62.4132%" y="222.50">_get_single_observation (..</text></g><g><title>__getitem__ (pandas/core/series.py:1096) (37 samples, 0.20%)</title><rect x="78.6932%" y="228" width="0.1970%" height="15" fill="rgb(226,211,11)" fg:x="14777" fg:w="37"/><text x="78.9432%" y="238.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1097) (20 samples, 0.11%)</title><rect x="78.8902%" y="228" width="0.1065%" height="15" fill="rgb(236,162,54)" fg:x="14814" fg:w="20"/><text x="79.1402%" y="238.50"></text></g><g><title>_get_value (pandas/core/series.py:1237) (91 samples, 0.48%)</title><rect x="79.1937%" y="244" width="0.4846%" height="15" fill="rgb(220,229,9)" fg:x="14871" fg:w="91"/><text x="79.4437%" y="254.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:3805) (66 samples, 0.35%)</title><rect x="79.3269%" y="260" width="0.3515%" height="15" fill="rgb(250,87,22)" fg:x="14896" fg:w="66"/><text x="79.5769%" y="270.50"></text></g><g><title>_get_single_observation (env.py:35) (272 samples, 1.45%)</title><rect x="78.5920%" y="212" width="1.4485%" height="15" fill="rgb(239,43,17)" fg:x="14758" fg:w="272"/><text x="78.8420%" y="222.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1121) (169 samples, 0.90%)</title><rect x="79.1405%" y="228" width="0.9000%" height="15" fill="rgb(231,177,25)" fg:x="14861" fg:w="169"/><text x="79.3905%" y="238.50"></text></g><g><title>_get_value (pandas/core/series.py:1240) (58 samples, 0.31%)</title><rect x="79.7316%" y="244" width="0.3089%" height="15" fill="rgb(219,179,1)" fg:x="14972" fg:w="58"/><text x="79.9816%" y="254.50"></text></g><g><title>_values (pandas/core/series.py:863) (34 samples, 0.18%)</title><rect x="79.8594%" y="260" width="0.1811%" height="15" fill="rgb(238,219,53)" fg:x="14996" fg:w="34"/><text x="80.1094%" y="270.50"></text></g><g><title>internal_values (pandas/core/internals/managers.py:2006) (31 samples, 0.17%)</title><rect x="79.8754%" y="276" width="0.1651%" height="15" fill="rgb(232,167,36)" fg:x="14999" fg:w="31"/><text x="80.1254%" y="286.50"></text></g><g><title>_get_single_observation (env.py:46) (49 samples, 0.26%)</title><rect x="80.0405%" y="212" width="0.2609%" height="15" fill="rgb(244,19,51)" fg:x="15030" fg:w="49"/><text x="80.2905%" y="222.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1097) (19 samples, 0.10%)</title><rect x="80.5144%" y="228" width="0.1012%" height="15" fill="rgb(224,6,22)" fg:x="15119" fg:w="19"/><text x="80.7644%" y="238.50"></text></g><g><title>_get_value (pandas/core/series.py:1237) (53 samples, 0.28%)</title><rect x="80.8286%" y="244" width="0.2822%" height="15" fill="rgb(224,145,5)" fg:x="15178" fg:w="53"/><text x="81.0786%" y="254.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:3805) (30 samples, 0.16%)</title><rect x="80.9511%" y="260" width="0.1598%" height="15" fill="rgb(234,130,49)" fg:x="15201" fg:w="30"/><text x="81.2011%" y="270.50"></text></g><g><title>_get_single_observation (env.py:47) (191 samples, 1.02%)</title><rect x="80.3014%" y="212" width="1.0171%" height="15" fill="rgb(254,6,2)" fg:x="15079" fg:w="191"/><text x="80.5514%" y="222.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1121) (101 samples, 0.54%)</title><rect x="80.7807%" y="228" width="0.5379%" height="15" fill="rgb(208,96,46)" fg:x="15169" fg:w="101"/><text x="81.0307%" y="238.50"></text></g><g><title>_get_value (pandas/core/series.py:1240) (37 samples, 0.20%)</title><rect x="81.1215%" y="244" width="0.1970%" height="15" fill="rgb(239,3,39)" fg:x="15233" fg:w="37"/><text x="81.3715%" y="254.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1096) (24 samples, 0.13%)</title><rect x="81.4783%" y="228" width="0.1278%" height="15" fill="rgb(233,210,1)" fg:x="15300" fg:w="24"/><text x="81.7283%" y="238.50"></text></g><g><title>_get_value (pandas/core/series.py:1237) (58 samples, 0.31%)</title><rect x="81.8511%" y="244" width="0.3089%" height="15" fill="rgb(244,137,37)" fg:x="15370" fg:w="58"/><text x="82.1011%" y="254.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:3805) (32 samples, 0.17%)</title><rect x="81.9896%" y="260" width="0.1704%" height="15" fill="rgb(240,136,2)" fg:x="15396" fg:w="32"/><text x="82.2396%" y="270.50"></text></g><g><title>_get_single_observation (env.py:49) (179 samples, 0.95%)</title><rect x="81.4091%" y="212" width="0.9532%" height="15" fill="rgb(239,18,37)" fg:x="15287" fg:w="179"/><text x="81.6591%" y="222.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1121) (102 samples, 0.54%)</title><rect x="81.8192%" y="228" width="0.5432%" height="15" fill="rgb(218,185,22)" fg:x="15364" fg:w="102"/><text x="82.0692%" y="238.50"></text></g><g><title>_get_value (pandas/core/series.py:1240) (33 samples, 0.18%)</title><rect x="82.1866%" y="244" width="0.1757%" height="15" fill="rgb(225,218,4)" fg:x="15433" fg:w="33"/><text x="82.4366%" y="254.50"></text></g><g><title>_get_single_observation (env.py:50) (24 samples, 0.13%)</title><rect x="82.3623%" y="212" width="0.1278%" height="15" fill="rgb(230,182,32)" fg:x="15466" fg:w="24"/><text x="82.6123%" y="222.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1096) (27 samples, 0.14%)</title><rect x="82.6020%" y="228" width="0.1438%" height="15" fill="rgb(242,56,43)" fg:x="15511" fg:w="27"/><text x="82.8520%" y="238.50"></text></g><g><title>_get_value (pandas/core/series.py:1237) (70 samples, 0.37%)</title><rect x="82.9588%" y="244" width="0.3728%" height="15" fill="rgb(233,99,24)" fg:x="15578" fg:w="70"/><text x="83.2088%" y="254.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:3805) (49 samples, 0.26%)</title><rect x="83.0706%" y="260" width="0.2609%" height="15" fill="rgb(234,209,42)" fg:x="15599" fg:w="49"/><text x="83.3206%" y="270.50"></text></g><g><title>_get_single_observation (env.py:51) (195 samples, 1.04%)</title><rect x="82.4901%" y="212" width="1.0384%" height="15" fill="rgb(227,7,12)" fg:x="15490" fg:w="195"/><text x="82.7401%" y="222.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1121) (113 samples, 0.60%)</title><rect x="82.9268%" y="228" width="0.6018%" height="15" fill="rgb(245,203,43)" fg:x="15572" fg:w="113"/><text x="83.1768%" y="238.50"></text></g><g><title>_get_value (pandas/core/series.py:1240) (36 samples, 0.19%)</title><rect x="83.3369%" y="244" width="0.1917%" height="15" fill="rgb(238,205,33)" fg:x="15649" fg:w="36"/><text x="83.5869%" y="254.50"></text></g><g><title>_get_single_observation (env.py:52) (19 samples, 0.10%)</title><rect x="83.5286%" y="212" width="0.1012%" height="15" fill="rgb(231,56,7)" fg:x="15685" fg:w="19"/><text x="83.7786%" y="222.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1096) (27 samples, 0.14%)</title><rect x="83.7895%" y="228" width="0.1438%" height="15" fill="rgb(244,186,29)" fg:x="15734" fg:w="27"/><text x="84.0395%" y="238.50"></text></g><g><title>_get_value (pandas/core/series.py:1237) (50 samples, 0.27%)</title><rect x="84.1996%" y="244" width="0.2663%" height="15" fill="rgb(234,111,31)" fg:x="15811" fg:w="50"/><text x="84.4496%" y="254.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:3805) (26 samples, 0.14%)</title><rect x="84.3274%" y="260" width="0.1385%" height="15" fill="rgb(241,149,10)" fg:x="15835" fg:w="26"/><text x="84.5774%" y="270.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1121) (85 samples, 0.45%)</title><rect x="84.1676%" y="228" width="0.4527%" height="15" fill="rgb(249,206,44)" fg:x="15805" fg:w="85"/><text x="84.4176%" y="238.50"></text></g><g><title>_get_value (pandas/core/series.py:1240) (28 samples, 0.15%)</title><rect x="84.4712%" y="244" width="0.1491%" height="15" fill="rgb(251,153,30)" fg:x="15862" fg:w="28"/><text x="84.7212%" y="254.50"></text></g><g><title>wrapped (shapely/decorators.py:65) (27 samples, 0.14%)</title><rect x="84.8120%" y="244" width="0.1438%" height="15" fill="rgb(239,152,38)" fg:x="15926" fg:w="27"/><text x="85.0620%" y="254.50"></text></g><g><title>wrapped (shapely/decorators.py:77) (244 samples, 1.30%)</title><rect x="85.2061%" y="244" width="1.2994%" height="15" fill="rgb(249,139,47)" fg:x="16000" fg:w="244"/><text x="85.4561%" y="254.50"></text></g><g><title>get_x (shapely/_geometry.py:264) (228 samples, 1.21%)</title><rect x="85.2913%" y="260" width="1.2142%" height="15" fill="rgb(244,64,35)" fg:x="16016" fg:w="228"/><text x="85.5413%" y="270.50"></text></g><g><title>_get_single_observation (env.py:53) (577 samples, 3.07%)</title><rect x="83.6298%" y="212" width="3.0727%" height="15" fill="rgb(216,46,15)" fg:x="15704" fg:w="577"/><text x="83.8798%" y="222.50">_ge..</text></g><g><title>x (shapely/geometry/point.py:88) (389 samples, 2.07%)</title><rect x="84.6310%" y="228" width="2.0716%" height="15" fill="rgb(250,74,19)" fg:x="15892" fg:w="389"/><text x="84.8810%" y="238.50">x..</text></g><g><title>wrapped (shapely/decorators.py:79) (37 samples, 0.20%)</title><rect x="86.5055%" y="244" width="0.1970%" height="15" fill="rgb(249,42,33)" fg:x="16244" fg:w="37"/><text x="86.7555%" y="254.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1096) (31 samples, 0.17%)</title><rect x="86.8037%" y="228" width="0.1651%" height="15" fill="rgb(242,149,17)" fg:x="16300" fg:w="31"/><text x="87.0537%" y="238.50"></text></g><g><title>_get_value (pandas/core/series.py:1237) (68 samples, 0.36%)</title><rect x="87.2404%" y="244" width="0.3621%" height="15" fill="rgb(244,29,21)" fg:x="16382" fg:w="68"/><text x="87.4904%" y="254.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:3805) (42 samples, 0.22%)</title><rect x="87.3788%" y="260" width="0.2237%" height="15" fill="rgb(220,130,37)" fg:x="16408" fg:w="42"/><text x="87.6288%" y="270.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1121) (128 samples, 0.68%)</title><rect x="87.1978%" y="228" width="0.6816%" height="15" fill="rgb(211,67,2)" fg:x="16374" fg:w="128"/><text x="87.4478%" y="238.50"></text></g><g><title>_get_value (pandas/core/series.py:1240) (51 samples, 0.27%)</title><rect x="87.6078%" y="244" width="0.2716%" height="15" fill="rgb(235,68,52)" fg:x="16451" fg:w="51"/><text x="87.8578%" y="254.50"></text></g><g><title>wrapped (shapely/decorators.py:65) (21 samples, 0.11%)</title><rect x="88.0871%" y="244" width="0.1118%" height="15" fill="rgb(246,142,3)" fg:x="16541" fg:w="21"/><text x="88.3371%" y="254.50"></text></g><g><title>wrapped (shapely/decorators.py:77) (270 samples, 1.44%)</title><rect x="88.4492%" y="244" width="1.4379%" height="15" fill="rgb(241,25,7)" fg:x="16609" fg:w="270"/><text x="88.6992%" y="254.50"></text></g><g><title>get_y (shapely/_geometry.py:290) (241 samples, 1.28%)</title><rect x="88.6037%" y="260" width="1.2834%" height="15" fill="rgb(242,119,39)" fg:x="16638" fg:w="241"/><text x="88.8537%" y="270.50"></text></g><g><title>_get_single_observation (env.py:54) (629 samples, 3.35%)</title><rect x="86.7025%" y="212" width="3.3497%" height="15" fill="rgb(241,98,45)" fg:x="16281" fg:w="629"/><text x="86.9525%" y="222.50">_ge..</text></g><g><title>y (shapely/geometry/point.py:93) (398 samples, 2.12%)</title><rect x="87.9327%" y="228" width="2.1195%" height="15" fill="rgb(254,28,30)" fg:x="16512" fg:w="398"/><text x="88.1827%" y="238.50">y..</text></g><g><title>wrapped (shapely/decorators.py:79) (31 samples, 0.17%)</title><rect x="89.8871%" y="244" width="0.1651%" height="15" fill="rgb(241,142,54)" fg:x="16879" fg:w="31"/><text x="90.1371%" y="254.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1096) (24 samples, 0.13%)</title><rect x="90.1321%" y="228" width="0.1278%" height="15" fill="rgb(222,85,15)" fg:x="16925" fg:w="24"/><text x="90.3821%" y="238.50"></text></g><g><title>_get_value (pandas/core/series.py:1237) (54 samples, 0.29%)</title><rect x="90.5474%" y="244" width="0.2876%" height="15" fill="rgb(210,85,47)" fg:x="17003" fg:w="54"/><text x="90.7974%" y="254.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:3805) (29 samples, 0.15%)</title><rect x="90.6806%" y="260" width="0.1544%" height="15" fill="rgb(224,206,25)" fg:x="17028" fg:w="29"/><text x="90.9306%" y="270.50"></text></g><g><title>_get_single_observation (env.py:55) (196 samples, 1.04%)</title><rect x="90.0522%" y="212" width="1.0438%" height="15" fill="rgb(243,201,19)" fg:x="16910" fg:w="196"/><text x="90.3022%" y="222.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1121) (112 samples, 0.60%)</title><rect x="90.4995%" y="228" width="0.5964%" height="15" fill="rgb(236,59,4)" fg:x="16994" fg:w="112"/><text x="90.7495%" y="238.50"></text></g><g><title>_get_value (pandas/core/series.py:1240) (48 samples, 0.26%)</title><rect x="90.8403%" y="244" width="0.2556%" height="15" fill="rgb(254,179,45)" fg:x="17058" fg:w="48"/><text x="91.0903%" y="254.50"></text></g><g><title>_values (pandas/core/series.py:863) (21 samples, 0.11%)</title><rect x="90.9841%" y="260" width="0.1118%" height="15" fill="rgb(226,14,10)" fg:x="17085" fg:w="21"/><text x="91.2341%" y="270.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1096) (25 samples, 0.13%)</title><rect x="91.1386%" y="228" width="0.1331%" height="15" fill="rgb(244,27,41)" fg:x="17114" fg:w="25"/><text x="91.3886%" y="238.50"></text></g><g><title>_get_value (pandas/core/series.py:1237) (58 samples, 0.31%)</title><rect x="91.4741%" y="244" width="0.3089%" height="15" fill="rgb(235,35,32)" fg:x="17177" fg:w="58"/><text x="91.7241%" y="254.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:3805) (36 samples, 0.19%)</title><rect x="91.5912%" y="260" width="0.1917%" height="15" fill="rgb(218,68,31)" fg:x="17199" fg:w="36"/><text x="91.8412%" y="270.50"></text></g><g><title>_get_observation (env.py:62) (5,724 samples, 30.48%)</title><rect x="61.5561%" y="196" width="30.4825%" height="15" fill="rgb(207,120,37)" fg:x="11559" fg:w="5724"/><text x="61.8061%" y="206.50">_get_observation (env.py:62)</text></g><g><title>_get_single_observation (env.py:56) (177 samples, 0.94%)</title><rect x="91.0960%" y="212" width="0.9426%" height="15" fill="rgb(227,98,0)" fg:x="17106" fg:w="177"/><text x="91.3460%" y="222.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1121) (109 samples, 0.58%)</title><rect x="91.4581%" y="228" width="0.5805%" height="15" fill="rgb(207,7,3)" fg:x="17174" fg:w="109"/><text x="91.7081%" y="238.50"></text></g><g><title>_get_value (pandas/core/series.py:1240) (44 samples, 0.23%)</title><rect x="91.8042%" y="244" width="0.2343%" height="15" fill="rgb(206,98,19)" fg:x="17239" fg:w="44"/><text x="92.0542%" y="254.50"></text></g><g><title>_get_observation (env.py:63) (23 samples, 0.12%)</title><rect x="92.0386%" y="196" width="0.1225%" height="15" fill="rgb(217,5,26)" fg:x="17283" fg:w="23"/><text x="92.2886%" y="206.50"></text></g><g><title>_get_observation (env.py:70) (22 samples, 0.12%)</title><rect x="92.3368%" y="196" width="0.1172%" height="15" fill="rgb(235,190,38)" fg:x="17339" fg:w="22"/><text x="92.5868%" y="206.50"></text></g><g><title>_get_observation (env.py:73) (19 samples, 0.10%)</title><rect x="92.4912%" y="196" width="0.1012%" height="15" fill="rgb(247,86,24)" fg:x="17368" fg:w="19"/><text x="92.7412%" y="206.50"></text></g><g><title>_get_observation (env.py:76) (19 samples, 0.10%)</title><rect x="92.7575%" y="196" width="0.1012%" height="15" fill="rgb(205,101,16)" fg:x="17418" fg:w="19"/><text x="93.0075%" y="206.50"></text></g><g><title>collect_rollouts (stable_baselines3/common/on_policy_algorithm.py:218) (17,059 samples, 90.85%)</title><rect x="2.6627%" y="116" width="90.8457%" height="15" fill="rgb(246,168,33)" fg:x="500" fg:w="17059"/><text x="2.9127%" y="126.50">collect_rollouts (stable_baselines3/common/on_policy_algorithm.py:218)</text></g><g><title>step (stable_baselines3/common/vec_env/base_vec_env.py:207) (17,059 samples, 90.85%)</title><rect x="2.6627%" y="132" width="90.8457%" height="15" fill="rgb(231,114,1)" fg:x="500" fg:w="17059"/><text x="2.9127%" y="142.50">step (stable_baselines3/common/vec_env/base_vec_env.py:207)</text></g><g><title>step_wait (stable_baselines3/common/vec_env/dummy_vec_env.py:60) (17,059 samples, 90.85%)</title><rect x="2.6627%" y="148" width="90.8457%" height="15" fill="rgb(207,184,53)" fg:x="500" fg:w="17059"/><text x="2.9127%" y="158.50">step_wait (stable_baselines3/common/vec_env/dummy_vec_env.py:60)</text></g><g><title>step (stable_baselines3/common/monitor.py:94) (17,059 samples, 90.85%)</title><rect x="2.6627%" y="164" width="90.8457%" height="15" fill="rgb(224,95,51)" fg:x="500" fg:w="17059"/><text x="2.9127%" y="174.50">step (stable_baselines3/common/monitor.py:94)</text></g><g><title>step (env.py:111) (6,008 samples, 31.99%)</title><rect x="61.5135%" y="180" width="31.9949%" height="15" fill="rgb(212,188,45)" fg:x="11551" fg:w="6008"/><text x="61.7635%" y="190.50">step (env.py:111)</text></g><g><title>_get_observation (env.py:81) (86 samples, 0.46%)</title><rect x="93.0504%" y="196" width="0.4580%" height="15" fill="rgb(223,154,38)" fg:x="17473" fg:w="86"/><text x="93.3004%" y="206.50"></text></g><g><title>learn (stable_baselines3/common/on_policy_algorithm.py:323) (17,098 samples, 91.05%)</title><rect x="2.4870%" y="100" width="91.0534%" height="15" fill="rgb(251,22,52)" fg:x="467" fg:w="17098"/><text x="2.7370%" y="110.50">learn (stable_baselines3/common/on_policy_algorithm.py:323)</text></g><g><title>train (stable_baselines3/ppo/ppo.py:213) (21 samples, 0.11%)</title><rect x="93.5936%" y="116" width="0.1118%" height="15" fill="rgb(229,209,22)" fg:x="17575" fg:w="21"/><text x="93.8436%" y="126.50"></text></g><g><title>train (stable_baselines3/ppo/ppo.py:275) (24 samples, 0.13%)</title><rect x="93.7107%" y="116" width="0.1278%" height="15" fill="rgb(234,138,34)" fg:x="17597" fg:w="24"/><text x="93.9607%" y="126.50"></text></g><g><title>backward (torch/_tensor.py:626) (24 samples, 0.13%)</title><rect x="93.7107%" y="132" width="0.1278%" height="15" fill="rgb(212,95,11)" fg:x="17597" fg:w="24"/><text x="93.9607%" y="142.50"></text></g><g><title>backward (torch/autograd/__init__.py:347) (24 samples, 0.13%)</title><rect x="93.7107%" y="148" width="0.1278%" height="15" fill="rgb(240,179,47)" fg:x="17597" fg:w="24"/><text x="93.9607%" y="158.50"></text></g><g><title>_engine_run_backward (torch/autograd/graph.py:823) (24 samples, 0.13%)</title><rect x="93.7107%" y="164" width="0.1278%" height="15" fill="rgb(240,163,11)" fg:x="17597" fg:w="24"/><text x="93.9607%" y="174.50"></text></g><g><title>_single_tensor_adam (torch/optim/adam.py:476) (19 samples, 0.10%)</title><rect x="93.9131%" y="212" width="0.1012%" height="15" fill="rgb(236,37,12)" fg:x="17635" fg:w="19"/><text x="94.1631%" y="222.50"></text></g><g><title>&lt;module&gt; (train.py:55) (17,300 samples, 92.13%)</title><rect x="1.9065%" y="68" width="92.1291%" height="15" fill="rgb(232,164,16)" fg:x="358" fg:w="17300"/><text x="2.1565%" y="78.50">&lt;module&gt; (train.py:55)</text></g><g><title>learn (stable_baselines3/ppo/ppo.py:311) (17,300 samples, 92.13%)</title><rect x="1.9065%" y="84" width="92.1291%" height="15" fill="rgb(244,205,15)" fg:x="358" fg:w="17300"/><text x="2.1565%" y="94.50">learn (stable_baselines3/ppo/ppo.py:311)</text></g><g><title>learn (stable_baselines3/common/on_policy_algorithm.py:336) (93 samples, 0.50%)</title><rect x="93.5403%" y="100" width="0.4953%" height="15" fill="rgb(223,117,47)" fg:x="17565" fg:w="93"/><text x="93.7903%" y="110.50"></text></g><g><title>train (stable_baselines3/ppo/ppo.py:278) (31 samples, 0.17%)</title><rect x="93.8705%" y="116" width="0.1651%" height="15" fill="rgb(244,107,35)" fg:x="17627" fg:w="31"/><text x="94.1205%" y="126.50"></text></g><g><title>wrapper (torch/optim/optimizer.py:493) (30 samples, 0.16%)</title><rect x="93.8758%" y="132" width="0.1598%" height="15" fill="rgb(205,140,8)" fg:x="17628" fg:w="30"/><text x="94.1258%" y="142.50"></text></g><g><title>_use_grad (torch/optim/optimizer.py:91) (30 samples, 0.16%)</title><rect x="93.8758%" y="148" width="0.1598%" height="15" fill="rgb(228,84,46)" fg:x="17628" fg:w="30"/><text x="94.1258%" y="158.50"></text></g><g><title>step (torch/optim/adam.py:244) (30 samples, 0.16%)</title><rect x="93.8758%" y="164" width="0.1598%" height="15" fill="rgb(254,188,9)" fg:x="17628" fg:w="30"/><text x="94.1258%" y="174.50"></text></g><g><title>maybe_fallback (torch/optim/optimizer.py:154) (30 samples, 0.16%)</title><rect x="93.8758%" y="180" width="0.1598%" height="15" fill="rgb(206,112,54)" fg:x="17628" fg:w="30"/><text x="94.1258%" y="190.50"></text></g><g><title>adam (torch/optim/adam.py:876) (30 samples, 0.16%)</title><rect x="93.8758%" y="196" width="0.1598%" height="15" fill="rgb(216,84,49)" fg:x="17628" fg:w="30"/><text x="94.1258%" y="206.50"></text></g><g><title>save_to_zip_file (stable_baselines3/common/save_util.py:329) (28 samples, 0.15%)</title><rect x="94.0356%" y="100" width="0.1491%" height="15" fill="rgb(214,194,35)" fg:x="17658" fg:w="28"/><text x="94.2856%" y="110.50"></text></g><g><title>save (torch/serialization.py:949) (28 samples, 0.15%)</title><rect x="94.0356%" y="116" width="0.1491%" height="15" fill="rgb(249,28,3)" fg:x="17658" fg:w="28"/><text x="94.2856%" y="126.50"></text></g><g><title>_save (torch/serialization.py:1216) (27 samples, 0.14%)</title><rect x="94.0409%" y="132" width="0.1438%" height="15" fill="rgb(222,56,52)" fg:x="17659" fg:w="27"/><text x="94.2909%" y="142.50"></text></g><g><title>&lt;module&gt; (train.py:60) (29 samples, 0.15%)</title><rect x="94.0356%" y="68" width="0.1544%" height="15" fill="rgb(245,217,50)" fg:x="17658" fg:w="29"/><text x="94.2856%" y="78.50"></text></g><g><title>save (stable_baselines3/common/base_class.py:867) (29 samples, 0.15%)</title><rect x="94.0356%" y="84" width="0.1544%" height="15" fill="rgb(213,201,24)" fg:x="17658" fg:w="29"/><text x="94.2856%" y="94.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:624) (26 samples, 0.14%)</title><rect x="94.2486%" y="1220" width="0.1385%" height="15" fill="rgb(248,116,28)" fg:x="17698" fg:w="26"/><text x="94.4986%" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (26 samples, 0.14%)</title><rect x="94.2486%" y="1236" width="0.1385%" height="15" fill="rgb(219,72,43)" fg:x="17698" fg:w="26"/><text x="94.4986%" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (26 samples, 0.14%)</title><rect x="94.2486%" y="1252" width="0.1385%" height="15" fill="rgb(209,138,14)" fg:x="17698" fg:w="26"/><text x="94.4986%" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (26 samples, 0.14%)</title><rect x="94.2486%" y="1268" width="0.1385%" height="15" fill="rgb(222,18,33)" fg:x="17698" fg:w="26"/><text x="94.4986%" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (26 samples, 0.14%)</title><rect x="94.2486%" y="1284" width="0.1385%" height="15" fill="rgb(213,199,7)" fg:x="17698" fg:w="26"/><text x="94.4986%" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (26 samples, 0.14%)</title><rect x="94.2486%" y="1300" width="0.1385%" height="15" fill="rgb(250,110,10)" fg:x="17698" fg:w="26"/><text x="94.4986%" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (36 samples, 0.19%)</title><rect x="94.2060%" y="292" width="0.1917%" height="15" fill="rgb(248,123,6)" fg:x="17690" fg:w="36"/><text x="94.4560%" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (36 samples, 0.19%)</title><rect x="94.2060%" y="308" width="0.1917%" height="15" fill="rgb(206,91,31)" fg:x="17690" fg:w="36"/><text x="94.4560%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (36 samples, 0.19%)</title><rect x="94.2060%" y="324" width="0.1917%" height="15" fill="rgb(211,154,13)" fg:x="17690" fg:w="36"/><text x="94.4560%" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (36 samples, 0.19%)</title><rect x="94.2060%" y="340" width="0.1917%" height="15" fill="rgb(225,148,7)" fg:x="17690" fg:w="36"/><text x="94.4560%" y="350.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (36 samples, 0.19%)</title><rect x="94.2060%" y="356" width="0.1917%" height="15" fill="rgb(220,160,43)" fg:x="17690" fg:w="36"/><text x="94.4560%" y="366.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (36 samples, 0.19%)</title><rect x="94.2060%" y="372" width="0.1917%" height="15" fill="rgb(213,52,39)" fg:x="17690" fg:w="36"/><text x="94.4560%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (36 samples, 0.19%)</title><rect x="94.2060%" y="388" width="0.1917%" height="15" fill="rgb(243,137,7)" fg:x="17690" fg:w="36"/><text x="94.4560%" y="398.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:73) (36 samples, 0.19%)</title><rect x="94.2060%" y="404" width="0.1917%" height="15" fill="rgb(230,79,13)" fg:x="17690" fg:w="36"/><text x="94.4560%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (36 samples, 0.19%)</title><rect x="94.2060%" y="420" width="0.1917%" height="15" fill="rgb(247,105,23)" fg:x="17690" fg:w="36"/><text x="94.4560%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (36 samples, 0.19%)</title><rect x="94.2060%" y="436" width="0.1917%" height="15" fill="rgb(223,179,41)" fg:x="17690" fg:w="36"/><text x="94.4560%" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (36 samples, 0.19%)</title><rect x="94.2060%" y="452" width="0.1917%" height="15" fill="rgb(218,9,34)" fg:x="17690" fg:w="36"/><text x="94.4560%" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (36 samples, 0.19%)</title><rect x="94.2060%" y="468" width="0.1917%" height="15" fill="rgb(222,106,8)" fg:x="17690" fg:w="36"/><text x="94.4560%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (36 samples, 0.19%)</title><rect x="94.2060%" y="484" width="0.1917%" height="15" fill="rgb(211,220,0)" fg:x="17690" fg:w="36"/><text x="94.4560%" y="494.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:19) (36 samples, 0.19%)</title><rect x="94.2060%" y="500" width="0.1917%" height="15" fill="rgb(229,52,16)" fg:x="17690" fg:w="36"/><text x="94.4560%" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (36 samples, 0.19%)</title><rect x="94.2060%" y="516" width="0.1917%" height="15" fill="rgb(212,155,18)" fg:x="17690" fg:w="36"/><text x="94.4560%" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (36 samples, 0.19%)</title><rect x="94.2060%" y="532" width="0.1917%" height="15" fill="rgb(242,21,14)" fg:x="17690" fg:w="36"/><text x="94.4560%" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (36 samples, 0.19%)</title><rect x="94.2060%" y="548" width="0.1917%" height="15" fill="rgb(222,19,48)" fg:x="17690" fg:w="36"/><text x="94.4560%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (36 samples, 0.19%)</title><rect x="94.2060%" y="564" width="0.1917%" height="15" fill="rgb(232,45,27)" fg:x="17690" fg:w="36"/><text x="94.4560%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (36 samples, 0.19%)</title><rect x="94.2060%" y="580" width="0.1917%" height="15" fill="rgb(249,103,42)" fg:x="17690" fg:w="36"/><text x="94.4560%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (36 samples, 0.19%)</title><rect x="94.2060%" y="596" width="0.1917%" height="15" fill="rgb(246,81,33)" fg:x="17690" fg:w="36"/><text x="94.4560%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (36 samples, 0.19%)</title><rect x="94.2060%" y="612" width="0.1917%" height="15" fill="rgb(252,33,42)" fg:x="17690" fg:w="36"/><text x="94.4560%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (36 samples, 0.19%)</title><rect x="94.2060%" y="628" width="0.1917%" height="15" fill="rgb(209,212,41)" fg:x="17690" fg:w="36"/><text x="94.4560%" y="638.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:15) (34 samples, 0.18%)</title><rect x="94.2166%" y="644" width="0.1811%" height="15" fill="rgb(207,154,6)" fg:x="17692" fg:w="34"/><text x="94.4666%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (34 samples, 0.18%)</title><rect x="94.2166%" y="660" width="0.1811%" height="15" fill="rgb(223,64,47)" fg:x="17692" fg:w="34"/><text x="94.4666%" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (34 samples, 0.18%)</title><rect x="94.2166%" y="676" width="0.1811%" height="15" fill="rgb(211,161,38)" fg:x="17692" fg:w="34"/><text x="94.4666%" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (34 samples, 0.18%)</title><rect x="94.2166%" y="692" width="0.1811%" height="15" fill="rgb(219,138,40)" fg:x="17692" fg:w="34"/><text x="94.4666%" y="702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (34 samples, 0.18%)</title><rect x="94.2166%" y="708" width="0.1811%" height="15" fill="rgb(241,228,46)" fg:x="17692" fg:w="34"/><text x="94.4666%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (34 samples, 0.18%)</title><rect x="94.2166%" y="724" width="0.1811%" height="15" fill="rgb(223,209,38)" fg:x="17692" fg:w="34"/><text x="94.4666%" y="734.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_chunking.py:11) (34 samples, 0.18%)</title><rect x="94.2166%" y="740" width="0.1811%" height="15" fill="rgb(236,164,45)" fg:x="17692" fg:w="34"/><text x="94.4666%" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (34 samples, 0.18%)</title><rect x="94.2166%" y="756" width="0.1811%" height="15" fill="rgb(231,15,5)" fg:x="17692" fg:w="34"/><text x="94.4666%" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (34 samples, 0.18%)</title><rect x="94.2166%" y="772" width="0.1811%" height="15" fill="rgb(252,35,15)" fg:x="17692" fg:w="34"/><text x="94.4666%" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (34 samples, 0.18%)</title><rect x="94.2166%" y="788" width="0.1811%" height="15" fill="rgb(248,181,18)" fg:x="17692" fg:w="34"/><text x="94.4666%" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (34 samples, 0.18%)</title><rect x="94.2166%" y="804" width="0.1811%" height="15" fill="rgb(233,39,42)" fg:x="17692" fg:w="34"/><text x="94.4666%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (34 samples, 0.18%)</title><rect x="94.2166%" y="820" width="0.1811%" height="15" fill="rgb(238,110,33)" fg:x="17692" fg:w="34"/><text x="94.4666%" y="830.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_param_validation.py:17) (29 samples, 0.15%)</title><rect x="94.2433%" y="836" width="0.1544%" height="15" fill="rgb(233,195,10)" fg:x="17697" fg:w="29"/><text x="94.4933%" y="846.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (29 samples, 0.15%)</title><rect x="94.2433%" y="852" width="0.1544%" height="15" fill="rgb(254,105,3)" fg:x="17697" fg:w="29"/><text x="94.4933%" y="862.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (29 samples, 0.15%)</title><rect x="94.2433%" y="868" width="0.1544%" height="15" fill="rgb(221,225,9)" fg:x="17697" fg:w="29"/><text x="94.4933%" y="878.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (29 samples, 0.15%)</title><rect x="94.2433%" y="884" width="0.1544%" height="15" fill="rgb(224,227,45)" fg:x="17697" fg:w="29"/><text x="94.4933%" y="894.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (29 samples, 0.15%)</title><rect x="94.2433%" y="900" width="0.1544%" height="15" fill="rgb(229,198,43)" fg:x="17697" fg:w="29"/><text x="94.4933%" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (29 samples, 0.15%)</title><rect x="94.2433%" y="916" width="0.1544%" height="15" fill="rgb(206,209,35)" fg:x="17697" fg:w="29"/><text x="94.4933%" y="926.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/validation.py:21) (29 samples, 0.15%)</title><rect x="94.2433%" y="932" width="0.1544%" height="15" fill="rgb(245,195,53)" fg:x="17697" fg:w="29"/><text x="94.4933%" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (29 samples, 0.15%)</title><rect x="94.2433%" y="948" width="0.1544%" height="15" fill="rgb(240,92,26)" fg:x="17697" fg:w="29"/><text x="94.4933%" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (29 samples, 0.15%)</title><rect x="94.2433%" y="964" width="0.1544%" height="15" fill="rgb(207,40,23)" fg:x="17697" fg:w="29"/><text x="94.4933%" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (29 samples, 0.15%)</title><rect x="94.2433%" y="980" width="0.1544%" height="15" fill="rgb(223,111,35)" fg:x="17697" fg:w="29"/><text x="94.4933%" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (29 samples, 0.15%)</title><rect x="94.2433%" y="996" width="0.1544%" height="15" fill="rgb(229,147,28)" fg:x="17697" fg:w="29"/><text x="94.4933%" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (29 samples, 0.15%)</title><rect x="94.2433%" y="1012" width="0.1544%" height="15" fill="rgb(211,29,28)" fg:x="17697" fg:w="29"/><text x="94.4933%" y="1022.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_array_api.py:17) (28 samples, 0.15%)</title><rect x="94.2486%" y="1028" width="0.1491%" height="15" fill="rgb(228,72,33)" fg:x="17698" fg:w="28"/><text x="94.4986%" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (28 samples, 0.15%)</title><rect x="94.2486%" y="1044" width="0.1491%" height="15" fill="rgb(205,214,31)" fg:x="17698" fg:w="28"/><text x="94.4986%" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (28 samples, 0.15%)</title><rect x="94.2486%" y="1060" width="0.1491%" height="15" fill="rgb(224,111,15)" fg:x="17698" fg:w="28"/><text x="94.4986%" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (28 samples, 0.15%)</title><rect x="94.2486%" y="1076" width="0.1491%" height="15" fill="rgb(253,21,26)" fg:x="17698" fg:w="28"/><text x="94.4986%" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (28 samples, 0.15%)</title><rect x="94.2486%" y="1092" width="0.1491%" height="15" fill="rgb(245,139,43)" fg:x="17698" fg:w="28"/><text x="94.4986%" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (28 samples, 0.15%)</title><rect x="94.2486%" y="1108" width="0.1491%" height="15" fill="rgb(252,170,7)" fg:x="17698" fg:w="28"/><text x="94.4986%" y="1118.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:17) (28 samples, 0.15%)</title><rect x="94.2486%" y="1124" width="0.1491%" height="15" fill="rgb(231,118,14)" fg:x="17698" fg:w="28"/><text x="94.4986%" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (28 samples, 0.15%)</title><rect x="94.2486%" y="1140" width="0.1491%" height="15" fill="rgb(238,83,0)" fg:x="17698" fg:w="28"/><text x="94.4986%" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (28 samples, 0.15%)</title><rect x="94.2486%" y="1156" width="0.1491%" height="15" fill="rgb(221,39,39)" fg:x="17698" fg:w="28"/><text x="94.4986%" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (28 samples, 0.15%)</title><rect x="94.2486%" y="1172" width="0.1491%" height="15" fill="rgb(222,119,46)" fg:x="17698" fg:w="28"/><text x="94.4986%" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (28 samples, 0.15%)</title><rect x="94.2486%" y="1188" width="0.1491%" height="15" fill="rgb(222,165,49)" fg:x="17698" fg:w="28"/><text x="94.4986%" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (28 samples, 0.15%)</title><rect x="94.2486%" y="1204" width="0.1491%" height="15" fill="rgb(219,113,52)" fg:x="17698" fg:w="28"/><text x="94.4986%" y="1214.50"></text></g><g><title>&lt;module&gt; (utils.py:3) (38 samples, 0.20%)</title><rect x="94.2060%" y="260" width="0.2024%" height="15" fill="rgb(214,7,15)" fg:x="17690" fg:w="38"/><text x="94.4560%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (38 samples, 0.20%)</title><rect x="94.2060%" y="276" width="0.2024%" height="15" fill="rgb(235,32,4)" fg:x="17690" fg:w="38"/><text x="94.4560%" y="286.50"></text></g><g><title>&lt;module&gt; (train.py:7) (45 samples, 0.24%)</title><rect x="94.1900%" y="68" width="0.2396%" height="15" fill="rgb(238,90,54)" fg:x="17687" fg:w="45"/><text x="94.4400%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (45 samples, 0.24%)</title><rect x="94.1900%" y="84" width="0.2396%" height="15" fill="rgb(213,208,19)" fg:x="17687" fg:w="45"/><text x="94.4400%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (45 samples, 0.24%)</title><rect x="94.1900%" y="100" width="0.2396%" height="15" fill="rgb(233,156,4)" fg:x="17687" fg:w="45"/><text x="94.4400%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (45 samples, 0.24%)</title><rect x="94.1900%" y="116" width="0.2396%" height="15" fill="rgb(207,194,5)" fg:x="17687" fg:w="45"/><text x="94.4400%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (45 samples, 0.24%)</title><rect x="94.1900%" y="132" width="0.2396%" height="15" fill="rgb(206,111,30)" fg:x="17687" fg:w="45"/><text x="94.4400%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (45 samples, 0.24%)</title><rect x="94.1900%" y="148" width="0.2396%" height="15" fill="rgb(243,70,54)" fg:x="17687" fg:w="45"/><text x="94.4400%" y="158.50"></text></g><g><title>&lt;module&gt; (env.py:3) (45 samples, 0.24%)</title><rect x="94.1900%" y="164" width="0.2396%" height="15" fill="rgb(242,28,8)" fg:x="17687" fg:w="45"/><text x="94.4400%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (45 samples, 0.24%)</title><rect x="94.1900%" y="180" width="0.2396%" height="15" fill="rgb(219,106,18)" fg:x="17687" fg:w="45"/><text x="94.4400%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (45 samples, 0.24%)</title><rect x="94.1900%" y="196" width="0.2396%" height="15" fill="rgb(244,222,10)" fg:x="17687" fg:w="45"/><text x="94.4400%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (45 samples, 0.24%)</title><rect x="94.1900%" y="212" width="0.2396%" height="15" fill="rgb(236,179,52)" fg:x="17687" fg:w="45"/><text x="94.4400%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (45 samples, 0.24%)</title><rect x="94.1900%" y="228" width="0.2396%" height="15" fill="rgb(213,23,39)" fg:x="17687" fg:w="45"/><text x="94.4400%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (45 samples, 0.24%)</title><rect x="94.1900%" y="244" width="0.2396%" height="15" fill="rgb(238,48,10)" fg:x="17687" fg:w="45"/><text x="94.4400%" y="254.50"></text></g><g><title>is_dumb_terminal (rich/console.py:976) (246 samples, 1.31%)</title><rect x="94.4297%" y="132" width="1.3100%" height="15" fill="rgb(251,196,23)" fg:x="17732" fg:w="246"/><text x="94.6797%" y="142.50"></text></g><g><title>is_terminal (rich/console.py:959) (246 samples, 1.31%)</title><rect x="94.4297%" y="148" width="1.3100%" height="15" fill="rgb(250,152,24)" fg:x="17732" fg:w="246"/><text x="94.6797%" y="158.50"></text></g><g><title>refresh (rich/live.py:240) (247 samples, 1.32%)</title><rect x="94.4297%" y="116" width="1.3154%" height="15" fill="rgb(209,150,17)" fg:x="17732" fg:w="247"/><text x="94.6797%" y="126.50"></text></g><g><title>refresh (rich/live.py:241) (519 samples, 2.76%)</title><rect x="95.7450%" y="116" width="2.7639%" height="15" fill="rgb(234,202,34)" fg:x="17979" fg:w="519"/><text x="95.9950%" y="126.50">re..</text></g><g><title>__exit__ (rich/console.py:864) (519 samples, 2.76%)</title><rect x="95.7450%" y="132" width="2.7639%" height="15" fill="rgb(253,148,53)" fg:x="17979" fg:w="519"/><text x="95.9950%" y="142.50">__..</text></g><g><title>_exit_buffer (rich/console.py:822) (519 samples, 2.76%)</title><rect x="95.7450%" y="148" width="2.7639%" height="15" fill="rgb(218,129,16)" fg:x="17979" fg:w="519"/><text x="95.9950%" y="158.50">_e..</text></g><g><title>_check_buffer (rich/console.py:2019) (519 samples, 2.76%)</title><rect x="95.7450%" y="164" width="2.7639%" height="15" fill="rgb(216,85,19)" fg:x="17979" fg:w="519"/><text x="95.9950%" y="174.50">_c..</text></g><g><title>_write_buffer (rich/console.py:2088) (516 samples, 2.75%)</title><rect x="95.7610%" y="180" width="2.7479%" height="15" fill="rgb(235,228,7)" fg:x="17982" fg:w="516"/><text x="96.0110%" y="190.50">_w..</text></g><g><title>options (rich/console.py:983) (85 samples, 0.45%)</title><rect x="98.5089%" y="148" width="0.4527%" height="15" fill="rgb(245,175,0)" fg:x="18498" fg:w="85"/><text x="98.7589%" y="158.50"></text></g><g><title>size (rich/console.py:1002) (85 samples, 0.45%)</title><rect x="98.5089%" y="164" width="0.4527%" height="15" fill="rgb(208,168,36)" fg:x="18498" fg:w="85"/><text x="98.7589%" y="174.50"></text></g><g><title>is_dumb_terminal (rich/console.py:976) (85 samples, 0.45%)</title><rect x="98.5089%" y="180" width="0.4527%" height="15" fill="rgb(246,171,24)" fg:x="18498" fg:w="85"/><text x="98.7589%" y="190.50"></text></g><g><title>is_terminal (rich/console.py:959) (85 samples, 0.45%)</title><rect x="98.5089%" y="196" width="0.4527%" height="15" fill="rgb(215,142,24)" fg:x="18498" fg:w="85"/><text x="98.7589%" y="206.50"></text></g><g><title>options (rich/console.py:986) (153 samples, 0.81%)</title><rect x="98.9616%" y="148" width="0.8148%" height="15" fill="rgb(250,187,7)" fg:x="18583" fg:w="153"/><text x="99.2116%" y="158.50"></text></g><g><title>width (rich/console.py:1050) (153 samples, 0.81%)</title><rect x="98.9616%" y="164" width="0.8148%" height="15" fill="rgb(228,66,33)" fg:x="18583" fg:w="153"/><text x="99.2116%" y="174.50"></text></g><g><title>size (rich/console.py:1002) (153 samples, 0.81%)</title><rect x="98.9616%" y="180" width="0.8148%" height="15" fill="rgb(234,215,21)" fg:x="18583" fg:w="153"/><text x="99.2116%" y="190.50"></text></g><g><title>is_dumb_terminal (rich/console.py:976) (153 samples, 0.81%)</title><rect x="98.9616%" y="196" width="0.8148%" height="15" fill="rgb(222,191,20)" fg:x="18583" fg:w="153"/><text x="99.2116%" y="206.50"></text></g><g><title>is_terminal (rich/console.py:959) (153 samples, 0.81%)</title><rect x="98.9616%" y="212" width="0.8148%" height="15" fill="rgb(245,79,54)" fg:x="18583" fg:w="153"/><text x="99.2116%" y="222.50"></text></g><g><title>print (rich/console.py:1690) (278 samples, 1.48%)</title><rect x="98.5089%" y="132" width="1.4805%" height="15" fill="rgb(240,10,37)" fg:x="18498" fg:w="278"/><text x="98.7589%" y="142.50"></text></g><g><title>options (rich/console.py:988) (40 samples, 0.21%)</title><rect x="99.7763%" y="148" width="0.2130%" height="15" fill="rgb(214,192,32)" fg:x="18736" fg:w="40"/><text x="100.0263%" y="158.50"></text></g><g><title>is_terminal (rich/console.py:959) (40 samples, 0.21%)</title><rect x="99.7763%" y="164" width="0.2130%" height="15" fill="rgb(209,36,54)" fg:x="18736" fg:w="40"/><text x="100.0263%" y="174.50"></text></g><g><title>_bootstrap (threading.py:1012) (1,045 samples, 5.57%)</title><rect x="94.4297%" y="68" width="5.5650%" height="15" fill="rgb(220,10,11)" fg:x="17732" fg:w="1045"/><text x="94.6797%" y="78.50">_bootst..</text></g><g><title>_bootstrap_inner (threading.py:1041) (1,045 samples, 5.57%)</title><rect x="94.4297%" y="84" width="5.5650%" height="15" fill="rgb(221,106,17)" fg:x="17732" fg:w="1045"/><text x="94.6797%" y="94.50">_bootst..</text></g><g><title>run (rich/live.py:32) (1,045 samples, 5.57%)</title><rect x="94.4297%" y="100" width="5.5650%" height="15" fill="rgb(251,142,44)" fg:x="17732" fg:w="1045"/><text x="94.6797%" y="110.50">run (ri..</text></g><g><title>refresh (rich/live.py:242) (279 samples, 1.49%)</title><rect x="98.5089%" y="116" width="1.4858%" height="15" fill="rgb(238,13,15)" fg:x="18498" fg:w="279"/><text x="98.7589%" y="126.50"></text></g><g><title>all (18,778 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(208,107,27)" fg:x="0" fg:w="18778"/><text x="0.2500%" y="62.50"></text></g></svg></svg>